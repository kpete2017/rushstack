{"version":3,"file":"DynamicCommandLineParser.test.js","sourceRoot":"","sources":["../../src/test/DynamicCommandLineParser.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,0BAAkG;AAElG,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,iBAAiB,GAA6B,IAAI,4BAAwB,CAAC;YAC/E,YAAY,EAAE,SAAS;YACvB,eAAe,EAAE,oBAAoB;SACtC,CAAC,CAAC;QAEH,MAAM,MAAM,GAA6B,IAAI,4BAAwB,CAAC;YACpE,UAAU,EAAE,YAAY;YACxB,OAAO,EAAE,cAAc;YACvB,aAAa,EAAE,sBAAsB;SACtC,CAAC,CAAC;QACH,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,mBAAmB,CAAC;YACzB,iBAAiB,EAAE,QAAQ;YAC3B,WAAW,EAAE,UAAU;SACxB,CAAC,CAAC;QAEH,MAAM,iBAAiB,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;QAE1D,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAEzD,MAAM,kBAAkB,GAA6B,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACvF,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { DynamicCommandLineParser, DynamicCommandLineAction, CommandLineFlagParameter } from '..';\r\n\r\ndescribe('DynamicCommandLineParser', () => {\r\n  it('parses an action', async () => {\r\n    const commandLineParser: DynamicCommandLineParser = new DynamicCommandLineParser({\r\n      toolFilename: 'example',\r\n      toolDescription: 'An example project'\r\n    });\r\n\r\n    const action: DynamicCommandLineAction = new DynamicCommandLineAction({\r\n      actionName: 'do:the-job',\r\n      summary: 'does the job',\r\n      documentation: 'a longer description'\r\n    });\r\n    commandLineParser.addAction(action);\r\n    action.defineFlagParameter({\r\n      parameterLongName: '--flag',\r\n      description: 'The flag'\r\n    });\r\n\r\n    await commandLineParser.execute(['do:the-job', '--flag']);\r\n\r\n    expect(commandLineParser.selectedAction).toEqual(action);\r\n\r\n    const retrievedParameter: CommandLineFlagParameter = action.getFlagParameter('--flag');\r\n    expect(retrievedParameter.value).toBe(true);\r\n  });\r\n});\r\n"]}