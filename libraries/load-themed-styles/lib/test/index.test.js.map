{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../src/test/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport {\r\n  detokenize,\r\n  loadTheme,\r\n  splitStyles,\r\n  loadStyles,\r\n  configureLoadStyles,\r\n  IThemingInstruction\r\n} from './../index';\r\n\r\ndescribe('detokenize', () => {\r\n  it('handles colors', () => {\r\n    expect(detokenize('\"[theme:name, default: #FFF]\"')).toEqual('#FFF');\r\n    expect(detokenize('\"[theme: name, default: #FFF]\"')).toEqual('#FFF');\r\n    expect(detokenize('\"[theme: name , default: #FFF  ]\"')).toEqual('#FFF');\r\n  });\r\n\r\n  it('handles rgba', () => {\r\n    expect(detokenize('\"[theme:name, default: rgba(255,255,255,.5)]\"')).toEqual('rgba(255,255,255,.5)');\r\n  });\r\n\r\n  it('handles fonts', () => {\r\n    expect(detokenize('\"[theme:name, default: \"Segoe UI\"]\"')).toEqual('\"Segoe UI\"');\r\n  });\r\n\r\n  it('respects theme', () => {\r\n    loadTheme({\r\n      color: 'red'\r\n    });\r\n\r\n    try {\r\n      expect(detokenize('\"[theme:color, default: #FFF]\"')).toEqual('red');\r\n      expect(detokenize('\"[theme: color , default: #FFF]\"')).toEqual('red');\r\n    } finally {\r\n      loadTheme(undefined);\r\n    }\r\n  });\r\n\r\n  it('ignores malformed themes', () => {\r\n    expect(detokenize('\"[theme:name, default: \"Segoe UI\"]')).toEqual('\"[theme:name, default: \"Segoe UI\"]');\r\n    expect(detokenize('\"[theme:]\"')).toEqual('\"[theme:]\"');\r\n  });\r\n\r\n  it('translates missing themes', () => {\r\n    expect(detokenize('\"[theme:name]\"')).toEqual('inherit');\r\n  });\r\n\r\n  it('splits non-themable CSS', () => {\r\n    const cssString: string = '.sampleClass\\n{\\n color: #FF0000;\\n}\\n';\r\n    const arr: IThemingInstruction[] = splitStyles(cssString);\r\n    expect(arr).toHaveLength(1);\r\n    expect(arr[0].rawString).toEqual(cssString);\r\n  });\r\n\r\n  it('splits themable CSS', () => {\r\n    const arr: IThemingInstruction[] = splitStyles(\r\n      '.firstClass { color: \"[theme: firstColor ]\";}\\n' +\r\n        ' .secondClass { color: \"[theme:secondColor, default: #AAA]\";}\\n .coach { color: #333; }'\r\n    );\r\n    expect(arr).toHaveLength(5);\r\n    for (let i: number = 0; i < arr.length; i++) {\r\n      if (i % 2 === 0) {\r\n        // even index should be a string component\r\n        expect(typeof arr[i].rawString).toEqual('string');\r\n      } else {\r\n        // odd index should be a theme instruction object\r\n        expect(typeof arr[i].theme).toEqual('string');\r\n      }\r\n    }\r\n  });\r\n\r\n  it('passes the styles to loadStyles override callback', () => {\r\n    const expected: string = 'xxx.foo { color: #FFF }xxx';\r\n    let subject: string | undefined = undefined;\r\n\r\n    const callback: (str: string) => void = (str: string) => {\r\n      subject = 'xxx' + str + 'xxx';\r\n    };\r\n\r\n    configureLoadStyles(callback);\r\n\r\n    loadStyles('.foo { color: \"[theme:fooColor, default: #FFF]\" }');\r\n    expect(subject).toEqual(expected);\r\n\r\n    configureLoadStyles(undefined);\r\n  });\r\n});\r\n"]}