{"version":3,"file":"RigConfig.test.js","sourceRoot":"","sources":["../../src/test/RigConfig.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport Ajv from 'ajv';\r\nimport stripJsonComments from 'strip-json-comments';\r\n\r\nimport { RigConfig } from '../RigConfig';\r\n\r\nconst testProjectFolder: string = path.join(__dirname, 'test-project');\r\n\r\nfunction expectEqualPaths(path1: string, path2: string): void {\r\n  if (path.relative(path1!, path2) !== '') {\r\n    fail('Expected paths to be equal:\\npath1: ' + path1 + '\\npath2: ' + path2);\r\n  }\r\n}\r\n\r\ndescribe('RigConfig tests', () => {\r\n  describe('loads a rig.json file', () => {\r\n    function validate(rigConfig: RigConfig): void {\r\n      expectEqualPaths(rigConfig.projectFolderPath, testProjectFolder);\r\n      expect(rigConfig.rigFound).toBe(true);\r\n      expectEqualPaths(rigConfig.filePath, path.join(testProjectFolder, 'config/rig.json'));\r\n      expect(rigConfig.rigProfile).toBe('web-app');\r\n      expect(rigConfig.rigPackageName).toBe('example-rig');\r\n      expect(rigConfig.relativeProfileFolderPath).toBe('profiles/web-app');\r\n    }\r\n\r\n    it('synchronously', () => {\r\n      const rigConfig: RigConfig = RigConfig.loadForProjectFolder({ projectFolderPath: testProjectFolder });\r\n      validate(rigConfig);\r\n    });\r\n\r\n    it('asynchronously', async () => {\r\n      const rigConfig: RigConfig = await RigConfig.loadForProjectFolderAsync({\r\n        projectFolderPath: testProjectFolder\r\n      });\r\n      validate(rigConfig);\r\n    });\r\n  });\r\n\r\n  describe('handles a missing rig.json file', () => {\r\n    function validate(rigConfig: RigConfig): void {\r\n      expectEqualPaths(rigConfig.projectFolderPath, __dirname);\r\n      expect(rigConfig.rigFound).toBe(false);\r\n      expect(rigConfig.filePath).toBe('');\r\n      expect(rigConfig.rigProfile).toBe('');\r\n      expect(rigConfig.rigPackageName).toBe('');\r\n      expect(rigConfig.relativeProfileFolderPath).toBe('');\r\n    }\r\n\r\n    it('synchronously', () => {\r\n      const rigConfig: RigConfig = RigConfig.loadForProjectFolder({ projectFolderPath: __dirname });\r\n      validate(rigConfig);\r\n    });\r\n\r\n    it('asynchronously', async () => {\r\n      const rigConfig: RigConfig = await RigConfig.loadForProjectFolderAsync({\r\n        projectFolderPath: __dirname\r\n      });\r\n      validate(rigConfig);\r\n    });\r\n  });\r\n\r\n  describe(`resolves the profile path`, () => {\r\n    it('synchronously', () => {\r\n      const rigConfig: RigConfig = RigConfig.loadForProjectFolder({\r\n        projectFolderPath: testProjectFolder\r\n      });\r\n\r\n      expect(rigConfig.rigFound).toBe(true);\r\n\r\n      expectEqualPaths(\r\n        rigConfig.getResolvedProfileFolder(),\r\n        path.join(testProjectFolder, 'node_modules/example-rig/profiles/web-app')\r\n      );\r\n    });\r\n\r\n    it('asynchronously', async () => {\r\n      const rigConfig: RigConfig = await RigConfig.loadForProjectFolderAsync({\r\n        projectFolderPath: testProjectFolder\r\n      });\r\n\r\n      expect(rigConfig.rigFound).toBe(true);\r\n\r\n      expectEqualPaths(\r\n        await rigConfig.getResolvedProfileFolderAsync(),\r\n        path.join(testProjectFolder, 'node_modules/example-rig/profiles/web-app')\r\n      );\r\n    });\r\n  });\r\n\r\n  describe(`reports an undefined profile`, () => {\r\n    it('synchronously', () => {\r\n      const rigConfig: RigConfig = RigConfig.loadForProjectFolder({\r\n        projectFolderPath: testProjectFolder,\r\n        overrideRigJsonObject: {\r\n          rigPackageName: 'example-rig',\r\n          rigProfile: 'missing-profile'\r\n        }\r\n      });\r\n\r\n      expect(rigConfig.rigFound).toBe(true);\r\n\r\n      expect(() => rigConfig.getResolvedProfileFolder()).toThrowError(\r\n        'The rig profile \"missing-profile\" is not defined by the rig package \"example-rig\"'\r\n      );\r\n    });\r\n\r\n    it('asynchronously', async () => {\r\n      const rigConfig: RigConfig = await RigConfig.loadForProjectFolderAsync({\r\n        projectFolderPath: testProjectFolder,\r\n        overrideRigJsonObject: {\r\n          rigPackageName: 'example-rig',\r\n          rigProfile: 'missing-profile'\r\n        }\r\n      });\r\n\r\n      await expect(rigConfig.getResolvedProfileFolderAsync()).rejects.toThrowError(\r\n        'The rig profile \"missing-profile\" is not defined by the rig package \"example-rig\"'\r\n      );\r\n    });\r\n  });\r\n\r\n  describe(`resolves a config file path`, () => {\r\n    it('synchronously', () => {\r\n      const rigConfig: RigConfig = RigConfig.loadForProjectFolder({\r\n        projectFolderPath: testProjectFolder\r\n      });\r\n\r\n      expect(rigConfig.rigFound).toBe(true);\r\n\r\n      const resolvedPath: string | undefined = rigConfig.tryResolveConfigFilePath('example-config.json');\r\n\r\n      expect(resolvedPath).toBeDefined();\r\n      expectEqualPaths(\r\n        resolvedPath!,\r\n        path.join(testProjectFolder, 'node_modules/example-rig/profiles/web-app/example-config.json')\r\n      );\r\n    });\r\n\r\n    it('asynchronously', async () => {\r\n      const rigConfig: RigConfig = await RigConfig.loadForProjectFolderAsync({\r\n        projectFolderPath: testProjectFolder\r\n      });\r\n\r\n      expect(rigConfig.rigFound).toBe(true);\r\n\r\n      const resolvedPath: string | undefined = await rigConfig.tryResolveConfigFilePathAsync(\r\n        'example-config.json'\r\n      );\r\n\r\n      expect(resolvedPath).toBeDefined();\r\n      expectEqualPaths(\r\n        resolvedPath!,\r\n        path.join(testProjectFolder, 'node_modules/example-rig/profiles/web-app/example-config.json')\r\n      );\r\n    });\r\n  });\r\n  it('validates a rig.json file using the schema', () => {\r\n    const rigConfigFilePath: string = path.join(testProjectFolder, 'config', 'rig.json');\r\n\r\n    const ajv = new Ajv({\r\n      verbose: true,\r\n      strictKeywords: true\r\n    });\r\n\r\n    // Delete our older \"draft-04/schema\" and use AJV's built-in schema\r\n    // eslint-disable-next-line\r\n    delete (RigConfig.jsonSchemaObject as any)['$schema'];\r\n\r\n    // Compile our schema\r\n    const validateRigFile: Ajv.ValidateFunction = ajv.compile(RigConfig.jsonSchemaObject);\r\n\r\n    // Load the rig.json file\r\n    const rigConfigFileContent: string = fs.readFileSync(rigConfigFilePath).toString();\r\n    const rigConfigJsonObject: unknown = JSON.parse(stripJsonComments(rigConfigFileContent));\r\n\r\n    // Validate it against our schema\r\n    const valid: boolean = validateRigFile(rigConfigJsonObject) as boolean;\r\n\r\n    expect(validateRigFile.errors).toMatchInlineSnapshot(`null`);\r\n    expect(valid).toBe(true);\r\n  });\r\n});\r\n"]}