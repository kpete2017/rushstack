{"version":3,"file":"PrintUtilities.test.js","sourceRoot":"","sources":["../../src/test/PrintUtilities.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,oEAAsF;AAEtF,sDAAmD;AAEnD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACjC,MAAM,OAAO,GACX,+MAA+M,CAAC;QAElN,IAAI,gBAA8C,CAAC;QACnD,IAAI,QAAkB,CAAC;QAEvB,UAAU,CAAC,GAAG,EAAE;YACd,gBAAgB,GAAG,IAAI,gDAA4B,CAAC,KAAK,CAAC,CAAC;YAC3D,QAAQ,GAAG,IAAI,4BAAQ,CAAC,gBAAgB,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,SAAS,cAAc,CAAC,aAAqB;YAC3C,MAAM,WAAW,GAAa,gBAAgB;iBAC3C,SAAS,CAAC,EAAE,0BAA0B,EAAE,IAAI,EAAE,CAAC;iBAC/C,KAAK,CAAC,KAAK,CAAC,CAAC;YAChB,MAAM,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;YAEtC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC9D,CAAC;QAED,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACvC,+BAAc,CAAC,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;YACxD,cAAc,CAAC,EAAE,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACrC,+BAAc,CAAC,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;YACzD,cAAc,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAC1C,IAAI,CAAC,KAAK,CAAC,+BAAc,EAAE,iBAAiB,CAAC,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAElE,+BAAc,CAAC,iBAAiB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YACpD,cAAc,CAAC,EAAE,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { StringBufferTerminalProvider, Terminal } from '@rushstack/node-core-library';\r\n\r\nimport { PrintUtilities } from '../PrintUtilities';\r\n\r\ndescribe('PrintUtilities', () => {\r\n  describe('printMessageInBox', () => {\r\n    const MESSAGE: string =\r\n      'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.';\r\n\r\n    let terminalProvider: StringBufferTerminalProvider;\r\n    let terminal: Terminal;\r\n\r\n    beforeEach(() => {\r\n      terminalProvider = new StringBufferTerminalProvider(false);\r\n      terminal = new Terminal(terminalProvider);\r\n    });\r\n\r\n    afterEach(() => {\r\n      jest.resetAllMocks();\r\n    });\r\n\r\n    function validateOutput(expectedWidth: number): void {\r\n      const outputLines: string[] = terminalProvider\r\n        .getOutput({ normalizeSpecialCharacters: true })\r\n        .split('[n]');\r\n      expect(outputLines).toMatchSnapshot();\r\n\r\n      expect(outputLines[0].trim().length).toEqual(expectedWidth);\r\n    }\r\n\r\n    it('Correctly prints a narrow box', () => {\r\n      PrintUtilities.printMessageInBox(MESSAGE, terminal, 20);\r\n      validateOutput(20);\r\n    });\r\n\r\n    it('Correctly prints a wide box', () => {\r\n      PrintUtilities.printMessageInBox(MESSAGE, terminal, 300);\r\n      validateOutput(300);\r\n    });\r\n\r\n    it('Correctly gets the console width', () => {\r\n      jest.spyOn(PrintUtilities, 'getConsoleWidth').mockReturnValue(65);\r\n\r\n      PrintUtilities.printMessageInBox(MESSAGE, terminal);\r\n      validateOutput(32);\r\n    });\r\n  });\r\n});\r\n"]}