{"version":3,"file":"PackageName.test.js","sourceRoot":"","sources":["../../src/test/PackageName.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { PackageName } from '../PackageName';\r\n\r\ndescribe('PackageName', () => {\r\n  describe('Test', () => {\r\n    test('isValidName() positive test', () => {\r\n      expect(PackageName.isValidName('@microsoft/example-package')).toEqual(true);\r\n    });\r\n\r\n    test('isValidName() negative test', () => {\r\n      expect(PackageName.isValidName('@microsoft/example-package/path')).toEqual(false);\r\n    });\r\n\r\n    test('tryParse() tests', () => {\r\n      expect(PackageName.tryParse('@microsoft/example-package')).toEqual({\r\n        scope: '@microsoft',\r\n        unscopedName: 'example-package',\r\n        error: ''\r\n      });\r\n\r\n      expect(PackageName.tryParse('')).toEqual({\r\n        scope: '',\r\n        unscopedName: '',\r\n        error: 'The package name must not be empty'\r\n      });\r\n\r\n      expect(\r\n        PackageName.tryParse(undefined as any) // eslint-disable-line @typescript-eslint/no-explicit-any\r\n      ).toEqual({\r\n        scope: '',\r\n        unscopedName: '',\r\n        error: 'The package name must not be null or undefined'\r\n      });\r\n\r\n      expect(PackageName.tryParse('@microsoft')).toEqual({\r\n        scope: '@microsoft',\r\n        unscopedName: '',\r\n        error: 'Error parsing \"@microsoft\": The scope must be followed by a slash'\r\n      });\r\n\r\n      expect(PackageName.tryParse('@/example-package')).toEqual({\r\n        scope: '@',\r\n        unscopedName: 'example-package',\r\n        error: 'Error parsing \"@/example-package\": The scope name cannot be empty'\r\n      });\r\n\r\n      expect(PackageName.tryParse('@Microsoft/example-package')).toEqual({\r\n        scope: '@Microsoft',\r\n        unscopedName: 'example-package',\r\n        error: 'The package scope \"@Microsoft\" must not contain upper case characters'\r\n      });\r\n\r\n      expect(PackageName.tryParse('@micro!soft/example-package')).toEqual({\r\n        scope: '@micro!soft',\r\n        unscopedName: 'example-package',\r\n        error: 'The package name \"@micro!soft/example-package\" contains an invalid character: \"!\"'\r\n      });\r\n\r\n      expect(PackageName.tryParse('@microsoft/node-co~re-library')).toEqual({\r\n        scope: '@microsoft',\r\n        unscopedName: 'node-co~re-library',\r\n        error: 'The package name \"@microsoft/node-co~re-library\" contains an invalid character: \"~\"'\r\n      });\r\n\r\n      expect(PackageName.tryParse('@microsoft/example-package/path')).toEqual({\r\n        scope: '@microsoft',\r\n        unscopedName: 'example-package/path',\r\n        error: 'The package name \"@microsoft/example-package/path\" contains an invalid character: \"/\"'\r\n      });\r\n    });\r\n  });\r\n\r\n  test('parse() test', () => {\r\n    expect(() => {\r\n      PackageName.parse('@');\r\n    }).toThrowError('The scope must be followed by a slash');\r\n  });\r\n\r\n  test('combineParts() tests', () => {\r\n    expect(PackageName.combineParts('@microsoft', 'example-package')).toEqual('@microsoft/example-package');\r\n\r\n    expect(PackageName.combineParts('', 'example-package')).toEqual('example-package');\r\n  });\r\n\r\n  test('combineParts() errors', () => {\r\n    expect(() => {\r\n      PackageName.combineParts('', '@microsoft/example-package');\r\n    }).toThrowError('The unscopedName cannot start with an \"@\" character');\r\n\r\n    expect(() => {\r\n      PackageName.combineParts('@micr!osoft', 'example-package');\r\n    }).toThrowError('The package name \"@micr!osoft/example-package\" contains an invalid character: \"!\"');\r\n\r\n    expect(() => {\r\n      PackageName.combineParts('', '');\r\n    }).toThrowError('The package name must not be empty');\r\n  });\r\n});\r\n"]}