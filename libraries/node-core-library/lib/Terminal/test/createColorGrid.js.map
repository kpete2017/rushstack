{"version":3,"file":"createColorGrid.js","sourceRoot":"","sources":["../../../src/Terminal/test/createColorGrid.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D;;GAEG;AAEH,uCAAyD;AAEzD,SAAgB,eAAe,CAC7B,iBAA6E;IAE7E,MAAM,mBAAmB,GAAkE;QACzF,CAAC,IAAI,EAAE,EAAE,CAAC,cAAM,CAAC,mCAAmC,CAAC,IAAI,CAAC;QAC1D,cAAM,CAAC,KAAK;QACZ,cAAM,CAAC,KAAK;QACZ,cAAM,CAAC,IAAI;QACX,cAAM,CAAC,OAAO;QACd,cAAM,CAAC,GAAG;QACV,cAAM,CAAC,MAAM;QACb,cAAM,CAAC,KAAK;QACZ,cAAM,CAAC,IAAI;QACX,cAAM,CAAC,IAAI;KACZ,CAAC;IAEF,MAAM,mBAAmB,GAAkE;QACzF,CAAC,IAAI,EAAE,EAAE,CAAC,cAAM,CAAC,mCAAmC,CAAC,IAAI,CAAC;QAC1D,cAAM,CAAC,eAAe;QACtB,cAAM,CAAC,eAAe;QACtB,cAAM,CAAC,cAAc;QACrB,cAAM,CAAC,iBAAiB;QACxB,cAAM,CAAC,aAAa;QACpB,cAAM,CAAC,gBAAgB;QACvB,cAAM,CAAC,eAAe;QACtB,cAAM,CAAC,cAAc;QACrB,cAAM,CAAC,cAAc;KACtB,CAAC;IAEF,MAAM,KAAK,GAA2B,EAAE,CAAC;IAEzC,KAAK,MAAM,kBAAkB,IAAI,mBAAmB,EAAE;QACpD,MAAM,SAAS,GAAyB,EAAE,CAAC;QAE3C,KAAK,MAAM,kBAAkB,IAAI,mBAAmB,EAAE;YACpD,IAAI,QAAQ,GAAuB,kBAAkB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/E,IAAI,iBAAiB,EAAE;gBACrB,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;aACxC;YAED,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1B;QAED,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACvB;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AA/CD,0CA+CC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * This file is a little program that prints all of the colors to the console\r\n */\r\n\r\nimport { Colors, IColorableSequence } from '../../index';\r\n\r\nexport function createColorGrid(\r\n  attributeFunction?: (text: string | IColorableSequence) => IColorableSequence\r\n): IColorableSequence[][] {\r\n  const foregroundFunctions: ((text: string | IColorableSequence) => IColorableSequence)[] = [\r\n    (text) => Colors._normalizeStringOrColorableSequence(text),\r\n    Colors.black,\r\n    Colors.white,\r\n    Colors.gray,\r\n    Colors.magenta,\r\n    Colors.red,\r\n    Colors.yellow,\r\n    Colors.green,\r\n    Colors.cyan,\r\n    Colors.blue\r\n  ];\r\n\r\n  const backgroundFunctions: ((text: string | IColorableSequence) => IColorableSequence)[] = [\r\n    (text) => Colors._normalizeStringOrColorableSequence(text),\r\n    Colors.blackBackground,\r\n    Colors.whiteBackground,\r\n    Colors.grayBackground,\r\n    Colors.magentaBackground,\r\n    Colors.redBackground,\r\n    Colors.yellowBackground,\r\n    Colors.greenBackground,\r\n    Colors.cyanBackground,\r\n    Colors.blueBackground\r\n  ];\r\n\r\n  const lines: IColorableSequence[][] = [];\r\n\r\n  for (const backgroundFunction of backgroundFunctions) {\r\n    const sequences: IColorableSequence[] = [];\r\n\r\n    for (const foregroundFunction of foregroundFunctions) {\r\n      let sequence: IColorableSequence = backgroundFunction(foregroundFunction('X'));\r\n      if (attributeFunction) {\r\n        sequence = attributeFunction(sequence);\r\n      }\r\n\r\n      sequences.push(sequence);\r\n    }\r\n\r\n    lines.push(sequences);\r\n  }\r\n\r\n  return lines;\r\n}\r\n"]}