{"version":3,"file":"ExampleApp.js","sourceRoot":"","sources":["../src/ExampleApp.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAoB,MAAM,gBAAgB,CAAC;AAEhE;;GAEG;AACH;IAAgC,8BAAe;IAA/C;QAAA,qEA0BC;QANC,uGAAuG;QACvG,yGAAyG;QACzG,mBAAmB;QACX,eAAS,GAAG,UAAC,MAAoB,EAAE,IAAsB;YAC/D,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/D,CAAC,CAAC;;IACJ,CAAC;IAzBQ,2BAAM,GAAb;QACE,IAAM,QAAQ,GAAwB;YACpC,eAAe,EAAE,SAAS;YAC1B,OAAO,EAAE,MAAM;YACf,YAAY,EAAE,KAAK;YACnB,KAAK,EAAE,OAAO;SACf,CAAC;QAEF,OAAO,CACL,6BAAK,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;YAC7B,6BAAK,KAAK,EAAE,QAAQ;gBAClB,gDAAsB;;gBAEtB,oBAAC,YAAY,IAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAI,CACnF,CACF,CACP,CAAC;IACJ,CAAC;IAQH,iBAAC;AAAD,CAAC,AA1BD,CAAgC,KAAK,CAAC,SAAS,GA0B9C","sourcesContent":["import * as React from 'react';\r\nimport { ToggleSwitch, IToggleEventArgs } from './ToggleSwitch';\r\n\r\n/**\r\n * This React component renders the application page.\r\n */\r\nexport class ExampleApp extends React.Component {\r\n  public render(): React.ReactNode {\r\n    const appStyle: React.CSSProperties = {\r\n      backgroundColor: '#ffffff',\r\n      padding: '20px',\r\n      borderRadius: '5px',\r\n      width: '400px'\r\n    };\r\n\r\n    return (\r\n      <div style={{ padding: '20px' }}>\r\n        <div style={appStyle}>\r\n          <h2>Hello, world!</h2>\r\n          Here is an example control:\r\n          <ToggleSwitch leftColor={'#800000'} rightColor={'#008000'} onToggle={this._onToggle} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // React event handlers should be represented as fields instead of methods to ensure the \"this\" pointer\r\n  // is bound correctly.  This form does not work with virtual/override inheritance, so use regular methods\r\n  // everywhere else.\r\n  private _onToggle = (sender: ToggleSwitch, args: IToggleEventArgs): void => {\r\n    console.log('Toggle switch changed: ' + args.sliderPosition);\r\n  };\r\n}\r\n"]}