{"version":3,"file":"customJestReporter.js","sourceRoot":"","sources":["../../src/test/customJestReporter.ts"],"names":[],"mappings":";;AAYA,MAAM,CAAC,OAAO;IACZ,4BAAmB,YAAiC,EAAE,OAAgB;IAAG,CAAC;IAEnE,uCAAU,GAAjB,UAAkB,OAAyB,EAAE,OAA+B;QAC1E,OAAO,CAAC,GAAG,EAAE,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,6EAA6E,CAAC,CAAC;IAC7F,CAAC;IAEM,wCAAW,GAAlB,UAAmB,IAAU,IAAyB,CAAC;IAEhD,yCAAY,GAAnB,UAAoB,IAAU,EAAE,UAAsB,EAAE,OAAyB;QAC/E,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;QAE3D,KAAqB,UAAsB,EAAtB,KAAA,UAAU,CAAC,WAAW,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;YAAxC,IAAM,MAAM,SAAA;YACf,OAAO,CAAC,GAAG,CAAI,MAAM,CAAC,KAAK,UAAK,MAAM,CAAC,MAAQ,CAAC,CAAC;SAClD;IACH,CAAC;IAEM,0CAAa,GAApB,UAAqB,QAAsB,EAAE,OAAyB;QACpE,OAAO,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;QACvE,OAAO,CAAC,GAAG,EAAE,CAAC;IAChB,CAAC;IAEM,yCAAY,GAAnB,cAAqC,CAAC;IACxC,yBAAC;AAAD,CAAC,AAxBgB,GAwBhB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\nimport type { Config } from '@jest/types';\r\nimport type {\r\n  Reporter,\r\n  Test,\r\n  TestResult,\r\n  AggregatedResult,\r\n  Context,\r\n  ReporterOnStartOptions\r\n} from '@jest/reporters';\r\n\r\nmodule.exports = class CustomJestReporter implements Reporter {\r\n  public constructor(globalConfig: Config.GlobalConfig, options: unknown) {}\r\n\r\n  public onRunStart(results: AggregatedResult, options: ReporterOnStartOptions): void | Promise<void> {\r\n    console.log();\r\n    console.log(`################# Custom Jest reporter: Starting test run #################`);\r\n  }\r\n\r\n  public onTestStart(test: Test): void | Promise<void> {}\r\n\r\n  public onTestResult(test: Test, testResult: TestResult, results: AggregatedResult): void | Promise<void> {\r\n    console.log('Custom Jest reporter: Reporting test result');\r\n\r\n    for (const result of testResult.testResults) {\r\n      console.log(`${result.title}: ${result.status}`);\r\n    }\r\n  }\r\n\r\n  public onRunComplete(contexts: Set<Context>, results: AggregatedResult): void | Promise<void> {\r\n    console.log('################# Completing test run #################');\r\n    console.log();\r\n  }\r\n\r\n  public getLastError(): void | Error {}\r\n};\r\n"]}