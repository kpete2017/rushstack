{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,6BAA6B;AAE7B,oEAA0D;AAE1D,MAAM,gBAAgB;IAAtB;QACkB,eAAU,GAAW,oBAAoB,CAAC;IAgC5D,CAAC;IA9BQ,KAAK,CAAC,WAAwB,EAAE,iBAAoC;QAKzE,WAAW,CAAC,cAAc,CAA4B;YACpD,UAAU,EAAE,kBAAkB;YAC9B,aAAa,EAAE,0BAA0B;YACzC,UAAU,EAAE;gBACV,UAAU,EAAE;oBACV,IAAI,EAAE,MAAM;oBACZ,iBAAiB,EAAE,cAAc;oBACjC,WAAW,EAAE,wBAAwB;iBACtC;aACF;YACD,QAAQ,EAAE,KAAK,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;gBACjC,MAAM,MAAM,GAAiB,WAAW,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;gBAC9E,MAAM,kBAAkB,GAAW,eAAe,UAAU,EAAE,CAAC;gBAC/D,MAAM,CAAC,QAAQ,CAAC,SAAS,CACvB,2CAA2C,kBAAkB,kBAAkB,CAChF,CAAC;gBAEF,MAAM,8BAAU,CAAC,cAAc,CAC7B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,MAAM,EAAE,sBAAsB,CAAC,EACxE,kBAAkB,EAClB,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAC7B,CAAC;YACJ,CAAC;SACF,CAAC,CAAC;IACL,CAAC;CACF;AAED,kBAAe,IAAI,gBAAgB,EAAE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { IHeftPlugin, HeftSession, HeftConfiguration, ScopedLogger } from '@rushstack/heft';\r\nimport { FileSystem } from '@rushstack/node-core-library';\r\n\r\nclass HeftActionPlugin implements IHeftPlugin {\r\n  public readonly pluginName: string = 'heft-action-plugin';\r\n\r\n  public apply(heftSession: HeftSession, heftConfiguration: HeftConfiguration): void {\r\n    interface IMyCustomActionParameters {\r\n      production: boolean;\r\n    }\r\n\r\n    heftSession.registerAction<IMyCustomActionParameters>({\r\n      actionName: 'my-custom-action',\r\n      documentation: 'An example custom action',\r\n      parameters: {\r\n        production: {\r\n          kind: 'flag',\r\n          parameterLongName: '--production',\r\n          description: 'Run in production mode'\r\n        }\r\n      },\r\n      callback: async ({ production }) => {\r\n        const logger: ScopedLogger = heftSession.requestScopedLogger('custom-action');\r\n        const customActionOutput: string = `production: ${production}`;\r\n        logger.terminal.writeLine(\r\n          `!!!!!!!!!!!!!! Custom action executing (${customActionOutput}) !!!!!!!!!!!!!!`\r\n        );\r\n\r\n        await FileSystem.writeFileAsync(\r\n          path.join(heftConfiguration.buildFolder, 'dist', 'custom-action-output'),\r\n          customActionOutput,\r\n          { ensureFolderExists: true }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default new HeftActionPlugin();\r\n"]}