{"version":3,"file":"jest-improved-resolver.js","sourceRoot":"","sources":["../src/jest-improved-resolver.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;AAkB3D,uDAAuD;AACvD,EAAE;AACF,2BAA2B;AAC3B,6BAA6B;AAC7B,EAAE;AACF,gDAAgD;AAChD,oCAAoC;AACpC,EAAE;AACF,oDAAoD;AACpD,qCAAqC;AACrC,MAAM,cAAc,GAAW,iCAAiC,CAAC;AAEjE,SAAS,OAAO,CAAC,OAAe,EAAE,OAAyB;IACzD,IAAI,UAAU,GAAW,OAAO,CAAC;IAEjC,mGAAmG;IACnG,aAAa;IACb,EAAE;IACF,4CAA4C;IAC5C,6DAA6D;IAC7D,4CAA4C;IAC5C,0DAA0D;IAC1D,EAAE;IACF,yGAAyG;IACzG,6GAA6G;IAC7G,mDAAmD;IACnD,EAAE;IACF,qCAAqC;IACrC,gEAAgE;IAChE,EAAE;IACF,sGAAsG;IACtG,sDAAsD;IACtD,EAAE;IACF,qCAAqC;IACrC,kDAAkD;IAClD,iEAAiE;IACjE,EAAE;IACF,sBAAsB;IACtB,EAAE;IACF,qCAAqC;IACrC,0EAA0E;IAC1E,EAAE;IACF,2GAA2G;IAC3G,mHAAmH;IACnH,2GAA2G;IAC3G,EAAE;IACF,iBAAiB;IACjB,yCAAyC;IACzC,wDAAwD;IACxD,MAAM,KAAK,GAA2B,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnE,IAAI,KAAK,EAAE;QACT,WAAW;QACX,oCAAoC;QACpC,qBAAqB;QACrB,uBAAuB;QACvB,0BAA0B;QAC1B,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;KAClC;IAED,OAAO,OAAO,CAAC,eAAe,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AACtD,CAAC;AAED,iBAAS,OAAO,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { Path } from '@jest/types/build/Config';\r\n\r\n// This signature is declared here:\r\n// https://github.com/facebook/jest/blob/6f7db3e40f88678f4986c969c6a76c575b51a138/packages/jest-resolve/src/defaultResolver.ts#L14\r\ninterface IResolverOptions {\r\n  allowPnp?: boolean;\r\n  basedir: Path;\r\n  browser?: boolean;\r\n  defaultResolver: (path: Path, options: IResolverOptions) => Path;\r\n  extensions?: string[];\r\n  moduleDirectory?: string[];\r\n  paths?: Path[];\r\n  rootDir?: Path;\r\n  packageFilter?: unknown;\r\n}\r\n\r\n// Match Jest's magic convention for specifying a mock:\r\n//\r\n// YES:  ../__mocks__/Thing\r\n// YES:  ./__mocks__/Thing.js\r\n//\r\n// Do not match other objects deeper in the tree\r\n// NO:   ./__mocks__/folder/Thing.js\r\n//\r\n// Do not match paths belong to an external package:\r\n// NO:   some-package/__mocks__/Thing\r\nconst mockPathRegExp: RegExp = /^(\\..*[\\/])__mocks__\\/([^\\/]+)$/;\r\n\r\nfunction resolve(request: string, options: IResolverOptions): string {\r\n  let newRequest: string = request;\r\n\r\n  // Jest's manual mock feature works by looking for a matching filename in a  \"__mocks__\" subfolder,\r\n  // like this:\r\n  //\r\n  //   file                            exports\r\n  //   ------------------------------  ------------------------\r\n  //   path/to/MyClass.ts              MyClass\r\n  //   path/to/__mocks__/MyClass.ts    MyClass, mockedMember\r\n  //\r\n  // At runtime, the Jest will substitute \"__mocks__/MyClass.ts\" for the real \"MyClass.ts\".  Often the mock\r\n  // needs to export additional test helpers like mockedMember.  Because Jest was not designed for type safety,\r\n  // the Jest documentation shows examples like this:\r\n  //\r\n  //    jest.mock(\"./path/to/MyClass\");\r\n  //    import { MyClass, mockedMember } from \"./path/to/MyClass\";\r\n  //\r\n  // But that won't work with TypeScript, because \"mockedMember\" is not declared by the real MyClass.ts.\r\n  // For proper type safety, we need write it like this:\r\n  //\r\n  //    jest.mock(\"./path/to/MyClass\");\r\n  //    import { MyClass } from \"./path/to/MyClass\";\r\n  //    import { mockedMember } from \"./path/to/__mocks__/MyClass\";\r\n  //\r\n  // ...or equivalently:\r\n  //\r\n  //    jest.mock(\"./path/to/MyClass\");\r\n  //    import { MyClass, mockedMember } from \"./path/to/__mocks__/MyClass\";\r\n  //\r\n  // Unfortunately when Jest substitutes path/to/__mocks__/MyClass.ts for path/to/MyClass.ts, it doesn't tell\r\n  // the module resolver about this, so \"./path/to/__mocks__/MyClass\" produces a duplicate object and the test fails.\r\n  // The code below fixes that problem, ensuring that the two import paths resolve to the same module object.\r\n  //\r\n  // Documentation:\r\n  // https://jestjs.io/docs/en/manual-mocks\r\n  // https://jestjs.io/docs/en/es6-class-mocks#manual-mock\r\n  const match: RegExpExecArray | null = mockPathRegExp.exec(request);\r\n  if (match) {\r\n    // Example:\r\n    // request    = \"../__mocks__/Thing\"\r\n    // match[1]   = \"../\"\r\n    // match[2]   = \"Thing\"\r\n    // newRequest = \"../Thing\"\r\n    newRequest = match[1] + match[2];\r\n  }\r\n\r\n  return options.defaultResolver(newRequest, options);\r\n}\r\n\r\nexport = resolve;\r\n"]}