{"version":3,"file":"WebpackConfigurationLoader.js","sourceRoot":"","sources":["../src/WebpackConfigurationLoader.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAA0D;AAsB1D,MAAM,uBAAuB,GAAW,mBAAmB,CAAC;AAC5D,MAAM,2BAA2B,GAAW,uBAAuB,CAAC;AAEpE,MAAa,0BAA0B;IAC9B,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAC3C,MAAoB,EACpB,WAAmB,EACnB,eAAsC;QAEtC,4FAA4F;QAC5F,kGAAkG;QAElG,IAAI,eAA6C,CAAC;QAElD,IAAI;YACF,IAAI,eAAe,CAAC,SAAS,EAAE;gBAC7B,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAC9B,kDAAkD,2BAA2B,IAAI,CAClF,CAAC;gBACF,eAAe,GAAG,0BAA0B,CAAC,4BAA4B,CACvE,WAAW,EACX,2BAA2B,CAC5B,CAAC;aACH;YAED,IAAI,CAAC,eAAe,EAAE;gBACpB,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAC9B,kDAAkD,uBAAuB,IAAI,CAC9E,CAAC;gBACF,eAAe,GAAG,0BAA0B,CAAC,4BAA4B,CACvE,WAAW,EACX,uBAAuB,CACxB,CAAC;aACH;SACF;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzB;QAED,IAAI,eAAe,EAAE;YACnB,MAAM,aAAa,GAChB,eAAuD,CAAC,OAAO,IAAI,eAAe,CAAC;YAEtF,IAAI,OAAO,aAAa,KAAK,UAAU,EAAE;gBACvC,OAAO,aAAa,CAAC,EAAE,IAAI,EAAE,eAAe,CAAC,UAAU,EAAE,UAAU,EAAE,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC;aACpG;iBAAM;gBACL,OAAO,aAAa,CAAC;aACtB;SACF;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAEO,MAAM,CAAC,4BAA4B,CACzC,WAAmB,EACnB,qBAA6B;QAE7B,MAAM,qBAAqB,GAAW,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC;QACpF,IAAI,8BAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE;YAC5C,IAAI;gBACF,OAAO,OAAO,CAAC,qBAAqB,CAAC,CAAC;aACvC;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,2CAA2C,qBAAqB,MAAM,CAAC,EAAE,CAAC,CAAC;aAC5F;SACF;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;CACF;AAhED,gEAgEC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { FileSystem } from '@rushstack/node-core-library';\r\nimport * as webpack from 'webpack';\r\nimport type { IBuildStageProperties, ScopedLogger } from '@rushstack/heft';\r\n\r\nimport { IWebpackConfiguration } from './shared';\r\n\r\n/**\r\n * See https://webpack.js.org/api/cli/#environment-options\r\n */\r\ninterface IWebpackConfigFunctionEnv {\r\n  prod: boolean;\r\n  production: boolean;\r\n}\r\ntype IWebpackConfigJsExport =\r\n  | webpack.Configuration\r\n  | webpack.Configuration[]\r\n  | Promise<webpack.Configuration>\r\n  | Promise<webpack.Configuration[]>\r\n  | ((env: IWebpackConfigFunctionEnv) => webpack.Configuration | webpack.Configuration[])\r\n  | ((env: IWebpackConfigFunctionEnv) => Promise<webpack.Configuration | webpack.Configuration[]>);\r\ntype IWebpackConfigJs = IWebpackConfigJsExport | { default: IWebpackConfigJsExport };\r\n\r\nconst WEBPACK_CONFIG_FILENAME: string = 'webpack.config.js';\r\nconst WEBPACK_DEV_CONFIG_FILENAME: string = 'webpack.dev.config.js';\r\n\r\nexport class WebpackConfigurationLoader {\r\n  public static async tryLoadWebpackConfigAsync(\r\n    logger: ScopedLogger,\r\n    buildFolder: string,\r\n    buildProperties: IBuildStageProperties\r\n  ): Promise<IWebpackConfiguration | undefined> {\r\n    // TODO: Eventually replace this custom logic with a call to this utility in in webpack-cli:\r\n    // https://github.com/webpack/webpack-cli/blob/next/packages/webpack-cli/lib/groups/ConfigGroup.js\r\n\r\n    let webpackConfigJs: IWebpackConfigJs | undefined;\r\n\r\n    try {\r\n      if (buildProperties.serveMode) {\r\n        logger.terminal.writeVerboseLine(\r\n          `Attempting to load webpack configuration from \"${WEBPACK_DEV_CONFIG_FILENAME}\".`\r\n        );\r\n        webpackConfigJs = WebpackConfigurationLoader._tryLoadWebpackConfiguration(\r\n          buildFolder,\r\n          WEBPACK_DEV_CONFIG_FILENAME\r\n        );\r\n      }\r\n\r\n      if (!webpackConfigJs) {\r\n        logger.terminal.writeVerboseLine(\r\n          `Attempting to load webpack configuration from \"${WEBPACK_CONFIG_FILENAME}\".`\r\n        );\r\n        webpackConfigJs = WebpackConfigurationLoader._tryLoadWebpackConfiguration(\r\n          buildFolder,\r\n          WEBPACK_CONFIG_FILENAME\r\n        );\r\n      }\r\n    } catch (error) {\r\n      logger.emitError(error);\r\n    }\r\n\r\n    if (webpackConfigJs) {\r\n      const webpackConfig: IWebpackConfigJsExport =\r\n        (webpackConfigJs as { default: IWebpackConfigJsExport }).default || webpackConfigJs;\r\n\r\n      if (typeof webpackConfig === 'function') {\r\n        return webpackConfig({ prod: buildProperties.production, production: buildProperties.production });\r\n      } else {\r\n        return webpackConfig;\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private static _tryLoadWebpackConfiguration(\r\n    buildFolder: string,\r\n    configurationFilename: string\r\n  ): IWebpackConfigJs | undefined {\r\n    const fullWebpackConfigPath: string = path.join(buildFolder, configurationFilename);\r\n    if (FileSystem.exists(fullWebpackConfigPath)) {\r\n      try {\r\n        return require(fullWebpackConfigPath);\r\n      } catch (e) {\r\n        throw new Error(`Error loading webpack configuration at \"${fullWebpackConfigPath}\": ${e}`);\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n"]}