{"version":3,"file":"shared.js","sourceRoot":"","sources":["../src/shared.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAG3D,iDAAmC;AAEnC,oEAAuF;AA0CvF,IAAI,gBAA8C,CAAC;AACnD,SAAgB,kBAAkB;IAChC,IAAI,CAAC,gBAAgB,EAAE;QACrB,MAAM,+BAA+B,GAAW,0BAAM,CAAC,aAAa,CAAC;YACnE,UAAU,EAAE,iCAAiC;YAC7C,cAAc,EAAE,SAAS;SAC1B,CAAC,CAAC;QACH,MAAM,2BAA2B,GAAiB,qCAAiB,CAAC,QAAQ,CAAC,eAAe,CAC1F,+BAA+B,CAChC,CAAC;QACF,gBAAgB,GAAG;YACjB,cAAc,EAAE,OAAO,CAAC,OAAQ;YAChC,uBAAuB,EAAE,2BAA2B,CAAC,OAAO;SAC7D,CAAC;KACH;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAhBD,gDAgBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { Configuration as WebpackDevServerConfiguration } from 'webpack-dev-server';\r\nimport * as webpack from 'webpack';\r\nimport type { IBuildStageProperties, IBundleSubstageProperties } from '@rushstack/heft';\r\nimport { Import, IPackageJson, PackageJsonLookup } from '@rushstack/node-core-library';\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IWebpackConfigurationWithDevServer extends webpack.Configuration {\r\n  devServer?: WebpackDevServerConfiguration;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport type IWebpackConfiguration =\r\n  | IWebpackConfigurationWithDevServer\r\n  | IWebpackConfigurationWithDevServer[]\r\n  | undefined;\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IWebpackBundleSubstageProperties extends IBundleSubstageProperties {\r\n  /**\r\n   * The configuration used by the Webpack plugin. This must be populated\r\n   * for Webpack to run. If webpackConfigFilePath is specified,\r\n   * this will be populated automatically with the exports of the\r\n   * config file referenced in that property.\r\n   */\r\n  webpackConfiguration?: webpack.Configuration | webpack.Configuration[];\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IWebpackBuildStageProperties extends IBuildStageProperties {\r\n  webpackStats?: webpack.Stats | webpack.compilation.MultiStats;\r\n}\r\n\r\nexport interface IWebpackVersions {\r\n  webpackVersion: string;\r\n  webpackDevServerVersion: string;\r\n}\r\n\r\nlet _webpackVersions: IWebpackVersions | undefined;\r\nexport function getWebpackVersions(): IWebpackVersions {\r\n  if (!_webpackVersions) {\r\n    const webpackDevServerPackageJsonPath: string = Import.resolveModule({\r\n      modulePath: 'webpack-dev-server/package.json',\r\n      baseFolderPath: __dirname\r\n    });\r\n    const webpackDevServerPackageJson: IPackageJson = PackageJsonLookup.instance.loadPackageJson(\r\n      webpackDevServerPackageJsonPath\r\n    );\r\n    _webpackVersions = {\r\n      webpackVersion: webpack.version!,\r\n      webpackDevServerVersion: webpackDevServerPackageJson.version\r\n    };\r\n  }\r\n\r\n  return _webpackVersions;\r\n}\r\n"]}