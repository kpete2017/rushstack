{"version":3,"file":"RehydrateAsset.js","sourceRoot":"","sources":["../src/RehydrateAsset.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { CachedSource, ConcatSource, ReplaceSource, Source } from 'webpack-sources';\r\n\r\nimport { CHUNK_MODULES_TOKEN } from './Constants';\r\nimport { IAssetInfo, IModuleMap, IModuleInfo } from './ModuleMinifierPlugin.types';\r\n\r\n/**\r\n * Rehydrates an asset with minified modules.\r\n * @param asset - The asset\r\n * @param moduleMap - The minified modules\r\n * @param banner - A banner to inject for license information\r\n * @public\r\n */\r\nexport function rehydrateAsset(asset: IAssetInfo, moduleMap: IModuleMap, banner: string): Source {\r\n  const { source: assetSource, modules, externalNames } = asset;\r\n\r\n  const assetCode: string = assetSource.source() as string;\r\n\r\n  const tokenIndex: number = assetCode.indexOf(CHUNK_MODULES_TOKEN);\r\n  const suffixStart: number = tokenIndex + CHUNK_MODULES_TOKEN.length;\r\n  const suffix: string = assetCode.slice(suffixStart);\r\n\r\n  const prefix: ReplaceSource = new ReplaceSource(assetSource);\r\n  // Preserve source map via fiddly logic\r\n  prefix.replace(tokenIndex, assetCode.length, '');\r\n\r\n  if (!modules.length) {\r\n    // Empty chunk, degenerate case\r\n    return new ConcatSource(banner, prefix, '[]', suffix);\r\n  }\r\n\r\n  const emptyFunction = 'function(){}'; // eslint-disable-line @typescript-eslint/typedef\r\n  // This must not have the global flag set\r\n  const validIdRegex: RegExp = /^[A-Za-z_$][A-Za-z0-9_$]*$/;\r\n\r\n  const source: ConcatSource = new ConcatSource(banner, prefix);\r\n\r\n  const firstModuleId: string | number = modules[0];\r\n  const lastModuleId: string | number = modules[modules.length - 1];\r\n\r\n  // Extended logic from webpack.Template.getModulesArrayBounds\r\n  const minId: number = typeof firstModuleId === 'number' ? firstModuleId : 0;\r\n  const maxId: number = typeof lastModuleId === 'number' ? lastModuleId : Infinity;\r\n\r\n  const simpleArrayOverhead: number = 2 + maxId;\r\n  let concatArrayOverhead: number = simpleArrayOverhead + 9;\r\n\r\n  let useObject: boolean = typeof firstModuleId !== 'number' || typeof lastModuleId !== 'number';\r\n  let objectOverhead: number = 1;\r\n  let lastId: number = 0;\r\n\r\n  if (!useObject) {\r\n    for (const id of modules) {\r\n      if (typeof id !== 'number') {\r\n        // This must be an object\r\n        useObject = true;\r\n        break;\r\n      }\r\n\r\n      // This is the extension from webpack.Template.getModulesArrayBounds\r\n      // We can make smaller emit by injecting additional filler arrays\r\n      const delta: number = id - lastId - 1;\r\n\r\n      // Compare the length of `],Array(${delta}),[` to ','.repeat(delta + 1)\r\n      const threshold: number = (lastId === 0 ? 7 : 11) + ('' + delta).length;\r\n      const fillerArraySavings: number = delta + 1 - threshold;\r\n      if (fillerArraySavings > 0) {\r\n        concatArrayOverhead -= fillerArraySavings;\r\n      }\r\n\r\n      objectOverhead += 2 + ('' + id).length;\r\n      lastId = id;\r\n    }\r\n  }\r\n\r\n  const useConcat: boolean = concatArrayOverhead < simpleArrayOverhead;\r\n\r\n  const arrayOverhead: number = useConcat ? concatArrayOverhead : simpleArrayOverhead;\r\n\r\n  useObject = useObject || objectOverhead < arrayOverhead;\r\n\r\n  if (useObject) {\r\n    // Write an object literal\r\n    let separator: '{' | ',' = '{';\r\n    for (const id of modules) {\r\n      // If the id is legal to use as a key in a JavaScript object literal, use as-is\r\n      const javascriptId: string | number =\r\n        typeof id !== 'string' || validIdRegex.test(id) ? id : JSON.stringify(id);\r\n      source.add(`${separator}${javascriptId}:`);\r\n      separator = ',';\r\n\r\n      const item: IModuleInfo | undefined = moduleMap.get(id);\r\n      const moduleCode: Source | string = item ? item.source : emptyFunction;\r\n      source.add(moduleCode);\r\n    }\r\n\r\n    source.add('}');\r\n  } else {\r\n    // Write one or more array literals, joined by Array(gap) expressions\r\n\r\n    // There will never be more than 16 + (\"\" + minId).length consecutive commas, so 40 is more than will ever be used\r\n    // This is because the above criteria triggers an Array(len) expression instead\r\n    const enoughCommas: string = ',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,';\r\n\r\n    const useConcatAtStart: boolean = useConcat && minId > 8;\r\n    lastId = useConcatAtStart ? minId : 0;\r\n    // TODO: Just because we want to use concat elsewhere doesn't mean its optimal to use at the start\r\n    let separator: string = useConcatAtStart ? `Array(${minId}).concat([` : '[';\r\n    let concatInserted: boolean = useConcatAtStart;\r\n    for (const id of modules) {\r\n      const delta: number = (id as number) - lastId - 1;\r\n      const deltaStr: string = '' + delta;\r\n      const fillerArrayThreshold: number = 11 + deltaStr.length;\r\n\r\n      const item: IModuleInfo | undefined = moduleMap.get(id);\r\n      const moduleCode: Source | string = item ? item.source : emptyFunction;\r\n\r\n      if (useConcat && delta + 1 > fillerArrayThreshold) {\r\n        if (concatInserted) {\r\n          source.add(`],Array(${deltaStr}),[`);\r\n        } else {\r\n          source.add(`].concat(Array(${deltaStr}),[`);\r\n          concatInserted = true;\r\n        }\r\n      } else {\r\n        source.add(separator + enoughCommas.slice(0, delta + 1));\r\n      }\r\n      lastId = id as number;\r\n      source.add(moduleCode);\r\n\r\n      separator = '';\r\n    }\r\n\r\n    source.add(useConcat ? '])' : ']');\r\n  }\r\n\r\n  source.add(suffix);\r\n\r\n  const cached: CachedSource = new CachedSource(source);\r\n\r\n  if (externalNames.size) {\r\n    const replaceSource: ReplaceSource = new ReplaceSource(cached);\r\n    const code: string = cached.source() as string;\r\n\r\n    const externalIdRegex: RegExp = /__WEBPACK_EXTERNAL_MODULE_[A-Za-z0-9_$]+/g;\r\n\r\n    // RegExp.exec uses null or an array as the return type, explicitly\r\n    let match: RegExpExecArray | null = null;\r\n    while ((match = externalIdRegex.exec(code))) {\r\n      const id: string = match[0];\r\n      const mapped: string | undefined = externalNames.get(id);\r\n\r\n      if (mapped === undefined) {\r\n        console.error(`Missing minified external for ${id} in ${asset.fileName}!`);\r\n      } else {\r\n        replaceSource.replace(match.index, externalIdRegex.lastIndex - 1, mapped);\r\n      }\r\n    }\r\n\r\n    return new CachedSource(replaceSource);\r\n  }\r\n\r\n  return cached;\r\n}\r\n"]}