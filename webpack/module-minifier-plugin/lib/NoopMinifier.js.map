{"version":3,"file":"NoopMinifier.js","sourceRoot":"","sources":["../src/NoopMinifier.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAQ3D;;;GAGG;AACH,MAAa,YAAY;IACvB;;;;OAIG;IACI,MAAM,CAAC,OAAmC,EAAE,QAAqC;QACtF,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;QAE/B,QAAQ,CAAC;YACP,IAAI;YACJ,KAAK,EAAE,SAAS;YAChB,IAAI;YACJ,GAAG,EAAE,SAAS;YACd,iBAAiB,EAAE,EAAE;SACtB,CAAC,CAAC;IACL,CAAC;CACF;AAjBD,oCAiBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport {\r\n  IModuleMinificationCallback,\r\n  IModuleMinificationRequest,\r\n  IModuleMinifier\r\n} from './ModuleMinifierPlugin.types';\r\n\r\n/**\r\n * Minifier implementation that does not actually transform the code, for debugging.\r\n * @public\r\n */\r\nexport class NoopMinifier implements IModuleMinifier {\r\n  /**\r\n   * No-op code transform.\r\n   * @param request - The request to process\r\n   * @param callback - The callback to invoke\r\n   */\r\n  public minify(request: IModuleMinificationRequest, callback: IModuleMinificationCallback): void {\r\n    const { code, hash } = request;\r\n\r\n    callback({\r\n      hash,\r\n      error: undefined,\r\n      code,\r\n      map: undefined,\r\n      extractedComments: []\r\n    });\r\n  }\r\n}\r\n"]}