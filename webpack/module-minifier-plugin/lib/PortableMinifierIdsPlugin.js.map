{"version":3,"file":"PortableMinifierIdsPlugin.js","sourceRoot":"","sources":["../src/PortableMinifierIdsPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { compilation, Compiler, Plugin } from 'webpack';\r\nimport { ReplaceSource } from 'webpack-sources';\r\nimport { createHash } from 'crypto';\r\nimport { TapOptions } from 'tapable';\r\nimport RequestShortener from 'webpack/lib/RequestShortener';\r\n\r\nimport { STAGE_AFTER, STAGE_BEFORE } from './Constants';\r\nimport {\r\n  _INormalModuleFactoryModuleData,\r\n  IExtendedModule,\r\n  IModuleMinifierPluginHooks\r\n} from './ModuleMinifierPlugin.types';\r\n\r\nconst PLUGIN_NAME: 'PortableMinifierModuleIdsPlugin' = 'PortableMinifierModuleIdsPlugin';\r\n\r\nconst TAP_BEFORE: TapOptions<'sync'> = {\r\n  name: PLUGIN_NAME,\r\n  stage: STAGE_BEFORE\r\n};\r\n\r\nconst TAP_AFTER: TapOptions<'sync'> = {\r\n  name: PLUGIN_NAME,\r\n  stage: STAGE_AFTER\r\n};\r\n\r\nconst STABLE_MODULE_ID_PREFIX: '__MODULEID_SHA_' = '__MODULEID_SHA_';\r\nconst STABLE_MODULE_ID_REGEX: RegExp = /['\"]?(__MODULEID_SHA_[0-9a-f]+)['\"]?/g;\r\n\r\n/**\r\n * Plugin responsible for converting the Webpack module ids (of whatever variety) to stable ids before code is handed to the minifier, then back again.\r\n * Uses the node module identity of the target module. Will emit an error if it encounters multiple versions of the same package in the same compilation.\r\n * @public\r\n */\r\nexport class PortableMinifierModuleIdsPlugin implements Plugin {\r\n  private readonly _minifierHooks: IModuleMinifierPluginHooks;\r\n\r\n  public constructor(minifierHooks: IModuleMinifierPluginHooks) {\r\n    this._minifierHooks = minifierHooks;\r\n  }\r\n\r\n  public apply(compiler: Compiler): void {\r\n    // Ensure that \"EXTERNAL MODULE: \" comments are portable and module version invariant\r\n    const baseShorten: (request: string) => string = RequestShortener.prototype.shorten;\r\n    RequestShortener.prototype.shorten = function (this: RequestShortener, request: string): string {\r\n      const baseResult: string = baseShorten.call(this, request);\r\n      const nodeModules: '/node_modules/' = '/node_modules/';\r\n\r\n      if (!baseResult) {\r\n        return baseResult;\r\n      }\r\n\r\n      const nodeModulesIndex: number = baseResult.lastIndexOf(nodeModules);\r\n      if (nodeModulesIndex < 0) {\r\n        return baseResult;\r\n      }\r\n\r\n      const nodeModulePath: string = baseResult.slice(nodeModulesIndex + nodeModules.length);\r\n      this.cache.set(request, nodeModulePath);\r\n      return nodeModulePath;\r\n    };\r\n\r\n    const nameByResource: Map<string | undefined, string> = new Map();\r\n\r\n    /**\r\n     * Figure out portable ids for modules by using their id based on the node module resolution algorithm\r\n     */\r\n    compiler.hooks.normalModuleFactory.tap(PLUGIN_NAME, (nmf: compilation.NormalModuleFactory) => {\r\n      nmf.hooks.module.tap(PLUGIN_NAME, (mod: IExtendedModule, data: _INormalModuleFactoryModuleData) => {\r\n        const { resourceResolveData: resolveData } = data;\r\n\r\n        if (resolveData) {\r\n          const { descriptionFileData: packageJson, relativePath } = resolveData;\r\n\r\n          if (packageJson && relativePath) {\r\n            const nodeId: string = `${packageJson.name}${relativePath.slice(1).replace(/\\.js(on)?$/, '')}`;\r\n            nameByResource.set(mod.resource, nodeId);\r\n            return mod;\r\n          }\r\n        }\r\n\r\n        console.error(`Missing resolution data for ${mod.resource}`);\r\n        return mod;\r\n      });\r\n    });\r\n\r\n    const stableIdToFinalId: Map<string | number, string | number> = new Map();\r\n\r\n    this._minifierHooks.finalModuleId.tap(PLUGIN_NAME, (id: string | number | undefined) => {\r\n      return id === undefined ? id : stableIdToFinalId.get(id);\r\n    });\r\n\r\n    this._minifierHooks.postProcessCodeFragment.tap(PLUGIN_NAME, (source: ReplaceSource, context: string) => {\r\n      const code: string = source.original().source() as string;\r\n\r\n      STABLE_MODULE_ID_REGEX.lastIndex = -1;\r\n      // RegExp.exec uses null or an array as the return type, explicitly\r\n      let match: RegExpExecArray | null = null;\r\n      while ((match = STABLE_MODULE_ID_REGEX.exec(code))) {\r\n        const id: string = match[1];\r\n        const mapped: string | number | undefined = stableIdToFinalId.get(id);\r\n\r\n        if (mapped === undefined) {\r\n          console.error(`Missing module id for ${id} in ${context}!`);\r\n        }\r\n\r\n        source.replace(match.index, STABLE_MODULE_ID_REGEX.lastIndex - 1, JSON.stringify(mapped));\r\n      }\r\n\r\n      return source;\r\n    });\r\n\r\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation: compilation.Compilation) => {\r\n      stableIdToFinalId.clear();\r\n\r\n      // Make module ids portable immediately before rendering.\r\n      // Unfortunately, other means of altering these ids don't work in Webpack 4 without a lot more code and work.\r\n      // Namely, a number of functions reference \"module.id\" directly during code generation\r\n      compilation.hooks.beforeChunkAssets.tap(TAP_AFTER, () => {\r\n        // For tracking collisions\r\n        const resourceById: Map<string | number, string> = new Map();\r\n\r\n        for (const mod of compilation.modules) {\r\n          const originalId: string | number = mod.id;\r\n\r\n          // Need to handle ConcatenatedModules, which don't have the resource property directly\r\n          const resource: string = (mod.rootModule || mod).resource;\r\n\r\n          // Map to the friendly node module identifier\r\n          const preferredId: string | undefined = nameByResource.get(resource);\r\n          if (preferredId) {\r\n            const hashId: string = createHash('sha256').update(preferredId).digest('hex');\r\n\r\n            // This is designed to be an easily regex-findable string\r\n            const stableId: string = `${STABLE_MODULE_ID_PREFIX}${hashId}`;\r\n            const existingResource: string | undefined = resourceById.get(stableId);\r\n\r\n            if (existingResource) {\r\n              compilation.errors.push(\r\n                new Error(\r\n                  `Module id collision for ${resource} with ${existingResource}.\\n This means you are bundling multiple versions of the same module.`\r\n                )\r\n              );\r\n            }\r\n\r\n            stableIdToFinalId.set(stableId, originalId);\r\n\r\n            // Record to detect collisions\r\n            resourceById.set(stableId, resource);\r\n            mod.id = stableId;\r\n          }\r\n        }\r\n      });\r\n\r\n      // This is the hook immediately following chunk asset rendering. Fix the module ids.\r\n      compilation.hooks.additionalChunkAssets.tap(TAP_BEFORE, () => {\r\n        // Restore module ids in case any later hooks need them\r\n        for (const mod of compilation.modules) {\r\n          const stableId: string | number = mod.id;\r\n          const finalId: string | number | undefined = stableIdToFinalId.get(stableId);\r\n          if (finalId !== undefined) {\r\n            mod.id = finalId;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n"]}