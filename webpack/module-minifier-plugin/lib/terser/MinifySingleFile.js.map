{"version":3,"file":"MinifySingleFile.js","sourceRoot":"","sources":["../../src/terser/MinifySingleFile.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,mCAA6D;AAE7D,oBAAkB;AAuBlB;;;GAGG;AACH,SAAS,cAAc,CAAC,OAAiB;IACvC,oBAAoB;IACpB,OAAO,CACL,CAAC,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,CAAC;QAC5D,8BAA8B,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CACnD,CAAC;AACJ,CAAC;AAED;;;;GAIG;AACH,SAAgB,gBAAgB,CAC9B,OAAmC,EACnC,aAA4B;IAE5B,MAAM,iBAAiB,GAAa,EAAE,CAAC;IACvC,MAAM,MAAM,GAA4B,aAAa,CAAC,MAAM,IAAI,EAAE,CAAC;IACnE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,aAAa,CAAC;IAEjD,MAAM,MAAM,GACV,cAAc,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,cAAc,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAErG,MAAM,YAAY,GAAkB;QAClC,GAAG,aAAa;QAChB,MAAM;QACN,MAAM;KACP,CAAC;IAEF,IAAI,MAAM,CAAC,QAAQ,KAAK,KAAK,EAAE;QAC7B;;;WAGG;QACH,MAAM,CAAC,QAAQ,GAAG,CAAC,OAAgB,EAAE,OAAiB,EAAE,EAAE;YACxD,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE;gBAC3B,MAAM,WAAW,GACf,OAAO,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,IAAI,CAAC;gBAClF,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACrC;YAED,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;KACH;IAED,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;IAEtD,IAAI,MAAM,IAAI,SAAS,EAAE;QACvB,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;KACnF;IAED,YAAY,CAAC,SAAS,GAAG,UAAU;QACjC,CAAC,CAAC;YACE,QAAQ,EAAE,IAAI;SACf;QACH,CAAC,CAAC,KAAK,CAAC;IAEV,MAAM,QAAQ,GAAiB,eAAM,CACnC;QACE,CAAC,UAAU,IAAI,MAAM,CAAC,EAAE,IAAI;KAC7B,EACD,YAAY,CACb,CAAC;IAEF,IAAI,QAAQ,CAAC,KAAK,EAAE;QAClB,OAAO;YACL,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,IAAI,EAAE,SAAS;YACf,GAAG,EAAE,SAAS;YACd,IAAI;YACJ,iBAAiB,EAAE,SAAS;SACK,CAAC;KACrC;IAED,OAAO;QACL,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,QAAQ,CAAC,IAAK;QACpB,GAAG,EAAE,QAAQ,CAAC,GAA8B;QAC5C,IAAI;QACJ,iBAAiB;KAClB,CAAC;AACJ,CAAC;AArED,4CAqEC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { minify, MinifyOptions, MinifyOutput } from 'terser';\r\nimport { RawSourceMap } from 'source-map';\r\nimport './Base54';\r\n\r\ndeclare module 'terser' {\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  interface SourceMapOptions {\r\n    asObject?: boolean;\r\n  }\r\n}\r\n\r\nimport {\r\n  IModuleMinificationRequest,\r\n  IModuleMinificationResult,\r\n  IModuleMinificationErrorResult\r\n} from '../ModuleMinifierPlugin.types';\r\n\r\ninterface IComment {\r\n  value: string;\r\n  type: 'comment1' | 'comment2' | 'comment3' | 'comment4';\r\n  pos: number;\r\n  line: number;\r\n  col: number;\r\n}\r\n\r\n/**\r\n * The logic for Terser's default \"some\" comments setting for preservation\r\n * @see https://github.com/terser/terser/blob/8d8200c2331c695d37f139b5850b10b595bce1d8/lib/output.js#L164-170\r\n */\r\nfunction isSomeComments(comment: IComment): boolean {\r\n  // multiline comment\r\n  return (\r\n    (comment.type === 'comment2' || comment.type === 'comment1') &&\r\n    /@preserve|@lic|@cc_on|^\\**!/i.test(comment.value)\r\n  );\r\n}\r\n\r\n/**\r\n * Minifies a single chunk of code. Factored out for reuse between ThreadPoolMinifier and SynchronousMinifier\r\n * Mutates terserOptions.output.comments to support comment extraction\r\n * @internal\r\n */\r\nexport function minifySingleFile(\r\n  request: IModuleMinificationRequest,\r\n  terserOptions: MinifyOptions\r\n): IModuleMinificationResult {\r\n  const extractedComments: string[] = [];\r\n  const output: MinifyOptions['output'] = terserOptions.output || {};\r\n  const { mangle: originalMangle } = terserOptions;\r\n\r\n  const mangle: MinifyOptions['mangle'] =\r\n    originalMangle === false ? false : typeof originalMangle === 'object' ? { ...originalMangle } : {};\r\n\r\n  const finalOptions: MinifyOptions = {\r\n    ...terserOptions,\r\n    output,\r\n    mangle\r\n  };\r\n\r\n  if (output.comments !== false) {\r\n    /**\r\n     * Comment extraction as performed by terser-webpack-plugin to ensure output parity in default configuration\r\n     * @see https://github.com/webpack-contrib/terser-webpack-plugin/blob/master/src/minify.js#L129-142\r\n     */\r\n    output.comments = (astNode: unknown, comment: IComment) => {\r\n      if (isSomeComments(comment)) {\r\n        const commentText: string =\r\n          comment.type === 'comment2' ? `/*${comment.value}*/\\n` : `//${comment.value}\\n`;\r\n        extractedComments.push(commentText);\r\n      }\r\n\r\n      return false;\r\n    };\r\n  }\r\n\r\n  const { code, nameForMap, hash, externals } = request;\r\n\r\n  if (mangle && externals) {\r\n    mangle.reserved = mangle.reserved ? externals.concat(mangle.reserved) : externals;\r\n  }\r\n\r\n  finalOptions.sourceMap = nameForMap\r\n    ? {\r\n        asObject: true\r\n      }\r\n    : false;\r\n\r\n  const minified: MinifyOutput = minify(\r\n    {\r\n      [nameForMap || 'code']: code\r\n    },\r\n    finalOptions\r\n  );\r\n\r\n  if (minified.error) {\r\n    return {\r\n      error: minified.error,\r\n      code: undefined,\r\n      map: undefined,\r\n      hash,\r\n      extractedComments: undefined\r\n    } as IModuleMinificationErrorResult;\r\n  }\r\n\r\n  return {\r\n    error: undefined,\r\n    code: minified.code!,\r\n    map: minified.map as unknown as RawSourceMap,\r\n    hash,\r\n    extractedComments\r\n  };\r\n}\r\n"]}