{"version":3,"file":"SubprocessTerminalProvider.js","sourceRoot":"","sources":["../../../src/utilities/subprocess/SubprocessTerminalProvider.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAM3D,MAAa,0BAA0B;IAKrC,YACE,oBAAmD,EACnD,OAAmE;QAEnE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;SAC/E;QAED,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IACvB,CAAC;IAED,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC;IAC1D,CAAC;IAED,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC;IACzD,CAAC;CACF;AAxBD,gEAwBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { ITerminalProvider, TerminalProviderSeverity } from '@rushstack/node-core-library';\r\n\r\nimport { ISubprocessInnerConfiguration } from './SubprocessRunnerBase';\r\n\r\nexport class SubprocessTerminalProvider implements ITerminalProvider {\r\n  private _builderConfiguration: ISubprocessInnerConfiguration;\r\n\r\n  public write: (data: string, severity: TerminalProviderSeverity) => void;\r\n\r\n  public constructor(\r\n    builderConfiguration: ISubprocessInnerConfiguration,\r\n    writeFn: (data: string, severity: TerminalProviderSeverity) => void\r\n  ) {\r\n    if (!process.send) {\r\n      throw new Error(`The process.send function is not supported in this context`);\r\n    }\r\n\r\n    this._builderConfiguration = builderConfiguration;\r\n    this.write = writeFn;\r\n  }\r\n\r\n  public get supportsColor(): boolean {\r\n    return this._builderConfiguration.terminalSupportsColor;\r\n  }\r\n\r\n  public get eolCharacter(): string {\r\n    return this._builderConfiguration.terminalEolCharacter;\r\n  }\r\n}\r\n"]}