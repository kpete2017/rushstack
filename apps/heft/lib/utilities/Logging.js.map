{"version":3,"file":"Logging.js","sourceRoot":"","sources":["../../src/utilities/Logging.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,2CAAyC;AAOzC,MAAM,sBAAsB,GAAmB;IAC7C,OAAO,EAAE,UAAU;IACnB,OAAO,EAAE,sBAAsB;CAChC,CAAC;AAEF,MAAa,OAAO;IACX,MAAM,CAAC,KAAK,CAAC,iCAAiC,CACnD,QAAkB,EAClB,IAAY,EACZ,EAAuB,EACvB,gBAAgC,sBAAsB;QAEtD,QAAQ,CAAC,SAAS,CAAC,SAAS,IAAI,gBAAgB,CAAC,CAAC;QAClD,MAAM,SAAS,GAAW,wBAAW,CAAC,GAAG,EAAE,CAAC;QAC5C,IAAI,mBAAmB,GAAW,aAAa,CAAC,OAAO,CAAC;QACxD,IAAI;YACF,MAAM,EAAE,EAAE,CAAC;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,mBAAmB,GAAG,aAAa,CAAC,OAAO,CAAC;YAC5C,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,MAAM,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,wBAAW,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;YACxE,QAAQ,CAAC,SAAS,CAAC,SAAS,IAAI,IAAI,mBAAmB,KAAK,aAAa,WAAW,CAAC,CAAC;SACvF;IACH,CAAC;CACF;AApBD,0BAoBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { Terminal } from '@rushstack/node-core-library';\r\nimport { performance } from 'perf_hooks';\r\n\r\nexport interface IFinishedWords {\r\n  success: string;\r\n  failure: string;\r\n}\r\n\r\nconst DEFAULT_FINISHED_WORDS: IFinishedWords = {\r\n  success: 'finished',\r\n  failure: 'encountered an error'\r\n};\r\n\r\nexport class Logging {\r\n  public static async runFunctionWithLoggingBoundsAsync(\r\n    terminal: Terminal,\r\n    name: string,\r\n    fn: () => Promise<void>,\r\n    finishedWords: IFinishedWords = DEFAULT_FINISHED_WORDS\r\n  ): Promise<void> {\r\n    terminal.writeLine(` ---- ${name} started ---- `);\r\n    const startTime: number = performance.now();\r\n    let finishedLoggingWord: string = finishedWords.success;\r\n    try {\r\n      await fn();\r\n    } catch (e) {\r\n      finishedLoggingWord = finishedWords.failure;\r\n      throw e;\r\n    } finally {\r\n      const executionTime: number = Math.round(performance.now() - startTime);\r\n      terminal.writeLine(` ---- ${name} ${finishedLoggingWord} (${executionTime}ms) ---- `);\r\n    }\r\n  }\r\n}\r\n"]}