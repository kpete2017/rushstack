{"version":3,"file":"TypeScriptInternals.js","sourceRoot":"","sources":["../../../../src/plugins/TypeScriptPlugin/internalTypings/TypeScriptInternals.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport type * as TTypescript from 'typescript';\r\n\r\n// The specifics of these types aren't important\r\n/**\r\n * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L3969-L4010\r\n */\r\nexport interface IEmitResolver {}\r\n\r\n/**\r\n * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L5969-L5988\r\n */\r\nexport interface IEmitHost {\r\n  writeFile: TTypescript.WriteFileCallback;\r\n}\r\n\r\n/**\r\n * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L3338-L3341\r\n */\r\nexport interface IEmitTransformers {}\r\n\r\nexport interface IExtendedProgram extends TTypescript.Program {\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L3205\r\n   */\r\n  getSourceFiles(): ReadonlyArray<IExtendedSourceFile>;\r\n\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/program.ts#L1024-L1048\r\n   */\r\n  getCommonSourceDirectory(): string;\r\n}\r\nexport interface IExtendedSourceFile extends TTypescript.SourceFile {\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L3011\r\n   */\r\n  version: string;\r\n}\r\n\r\n/**\r\n * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L3799-L3803\r\n */\r\nexport interface IResolveModuleNameResolutionHost {\r\n  getCanonicalFileName(p: string): string;\r\n  getCommonSourceDirectory(): string;\r\n  getCurrentDirectory(): string;\r\n}\r\n\r\nexport interface IExtendedTypeScript {\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L3\r\n   */\r\n  performance: {\r\n    /**\r\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L110-L116\r\n     */\r\n    enable(): void;\r\n\r\n    /**\r\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L55-L61\r\n     */\r\n    mark(performanceMaker: string): void;\r\n\r\n    /**\r\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L72-L78\r\n     */\r\n    measure(measureName: string, startMarkName?: string, endMarkName?: string): void;\r\n\r\n    /**\r\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L94-L96\r\n     */\r\n    getDuration(measureName: string): number;\r\n\r\n    /**\r\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L85-L87\r\n     */\r\n    getCount(measureName: string): number;\r\n  };\r\n\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L4720-L4734\r\n   */\r\n  readJson(filePath: string): object;\r\n\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L5848-L5907\r\n   */\r\n  matchFiles(\r\n    path: string,\r\n    extensions: ReadonlyArray<string> | undefined,\r\n    excludes: ReadonlyArray<string> | undefined,\r\n    includes: ReadonlyArray<string> | undefined,\r\n    useCaseSensitiveFileNames: boolean,\r\n    currentDirectory: string,\r\n    depth: number | undefined,\r\n    getFileSystemEntries: (path: string) => {\r\n      readonly files: ReadonlyArray<string>;\r\n      readonly directories: ReadonlyArray<string>;\r\n    },\r\n    realpath: (path: string) => string\r\n  ): string[];\r\n\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/emitter.ts#L261-L614\r\n   */\r\n  emitFiles(\r\n    resolver: IEmitResolver,\r\n    host: IEmitHost,\r\n    targetSourceFile: TTypescript.SourceFile | undefined,\r\n    emitTransformers: IEmitTransformers,\r\n    emitOnlyDtsFiles?: boolean,\r\n    onlyBuildInfo?: boolean,\r\n    forceDtsEmit?: boolean\r\n  ): TTypescript.EmitResult;\r\n\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/transformer.ts#L30-L35\r\n   */\r\n  getTransformers(\r\n    compilerOptions: TTypescript.CompilerOptions,\r\n    customTransformers?: TTypescript.CustomTransformers,\r\n    emitOnlyDtsFiles?: boolean\r\n  ): IEmitTransformers;\r\n\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L6100-L6108\r\n   */\r\n  removeFileExtension(path: string): string;\r\n\r\n  /**\r\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L3826-L3833\r\n   */\r\n  getExternalModuleNameFromPath(\r\n    host: IResolveModuleNameResolutionHost,\r\n    fileName: string,\r\n    referencePath?: string\r\n  ): string;\r\n\r\n  Diagnostics: {\r\n    // https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/diagnosticMessages.json#L4252-L4255\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    Found_1_error_Watching_for_file_changes: TTypescript.DiagnosticMessage;\r\n\r\n    // https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/diagnosticMessages.json#L4256-L4259\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    Found_0_errors_Watching_for_file_changes: TTypescript.DiagnosticMessage;\r\n\r\n    // https://github.com/microsoft/TypeScript/blob/2428ade1a91248e847f3e1561e31a9426650efee/src/compiler/diagnosticMessages.json#L2252\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor: TTypescript.DiagnosticMessage;\r\n\r\n    // https://github.com/microsoft/TypeScript/blob/2428ade1a91248e847f3e1561e31a9426650efee/src/compiler/diagnosticMessages.json#L4920\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1: TTypescript.DiagnosticMessage;\r\n  };\r\n}\r\n\r\nexport type ExtendedTypeScript = typeof TTypescript & IExtendedTypeScript;\r\n"]}