{"version":3,"file":"TestStage.js","sourceRoot":"","sources":["../../src/stages/TestStage.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,2CAAuE;AAEvE,qCAA6D;AAG7D;;GAEG;AACH,MAAa,cAAe,SAAQ,0BAAoC;IAAxE;;QACkB,QAAG,GAAsB,IAAI,2BAAiB,EAAE,CAAC;QACjD,kBAAa,GAAoB,IAAI,yBAAe,EAAE,CAAC;IACzE,CAAC;CAAA;AAHD,wCAGC;AAwCD,MAAa,SAAU,SAAQ,qBAAkE;IAC/F,YAAmB,iBAAoC,EAAE,cAA8B;QACrF,KAAK,CAAC,iBAAiB,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;IAC3D,CAAC;IAES,KAAK,CAAC,8BAA8B,CAAC,OAA0B;QACvE,OAAO;YACL,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,eAAe,EAAE,OAAO,CAAC,eAAe;YAExC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;YAC1C,eAAe,EAAE,OAAO,CAAC,eAAe;YACxC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,eAAe,EAAE,OAAO,CAAC,eAAe;YACxC,eAAe,EAAE,OAAO,CAAC,eAAe;YACxC,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;YAC5C,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;YAC5C,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B,CAAC;IACJ,CAAC;IAES,KAAK,CAAC,iBAAiB;QAC/B,MAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC9C,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;CACF;AA1BD,8BA0BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { StageBase, StageHooksBase, IStageContext } from './StageBase';\r\nimport { HeftConfiguration } from '../configuration/HeftConfiguration';\r\nimport { AsyncSeriesHook, AsyncParallelHook } from 'tapable';\r\nimport { LoggingManager } from '../pluginFramework/logging/LoggingManager';\r\n\r\n/**\r\n * @public\r\n */\r\nexport class TestStageHooks extends StageHooksBase<ITestStageProperties> {\r\n  public readonly run: AsyncParallelHook = new AsyncParallelHook();\r\n  public readonly configureTest: AsyncSeriesHook = new AsyncSeriesHook();\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface ITestStageProperties {\r\n  watchMode: boolean;\r\n  updateSnapshots: boolean;\r\n\r\n  findRelatedTests: ReadonlyArray<string> | undefined;\r\n  passWithNoTests: boolean | undefined;\r\n  silent: boolean | undefined;\r\n  testNamePattern: string | undefined;\r\n  testPathPattern: ReadonlyArray<string> | undefined;\r\n  testTimeout: number | undefined;\r\n  detectOpenHandles: boolean | undefined;\r\n  debugHeftReporter: boolean | undefined;\r\n  maxWorkers: string | undefined;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface ITestStageContext extends IStageContext<TestStageHooks, ITestStageProperties> {}\r\n\r\nexport interface ITestStageOptions {\r\n  watchMode: boolean;\r\n  updateSnapshots: boolean;\r\n\r\n  findRelatedTests: ReadonlyArray<string> | undefined;\r\n  passWithNoTests: boolean | undefined;\r\n  silent: boolean | undefined;\r\n  testNamePattern: string | undefined;\r\n  testPathPattern: ReadonlyArray<string> | undefined;\r\n  testTimeout: number | undefined;\r\n  detectOpenHandles: boolean | undefined;\r\n  debugHeftReporter: boolean | undefined;\r\n  maxWorkers: string | undefined;\r\n}\r\n\r\nexport class TestStage extends StageBase<TestStageHooks, ITestStageProperties, ITestStageOptions> {\r\n  public constructor(heftConfiguration: HeftConfiguration, loggingManager: LoggingManager) {\r\n    super(heftConfiguration, loggingManager, TestStageHooks);\r\n  }\r\n\r\n  protected async getDefaultStagePropertiesAsync(options: ITestStageOptions): Promise<ITestStageProperties> {\r\n    return {\r\n      watchMode: options.watchMode,\r\n      updateSnapshots: options.updateSnapshots,\r\n\r\n      findRelatedTests: options.findRelatedTests,\r\n      passWithNoTests: options.passWithNoTests,\r\n      silent: options.silent,\r\n      testNamePattern: options.testNamePattern,\r\n      testPathPattern: options.testPathPattern,\r\n      testTimeout: options.testTimeout,\r\n      detectOpenHandles: options.detectOpenHandles,\r\n      debugHeftReporter: options.debugHeftReporter,\r\n      maxWorkers: options.maxWorkers\r\n    };\r\n  }\r\n\r\n  protected async executeInnerAsync(): Promise<void> {\r\n    await this.stageHooks.configureTest.promise();\r\n    await this.stageHooks.run.promise();\r\n  }\r\n}\r\n"]}