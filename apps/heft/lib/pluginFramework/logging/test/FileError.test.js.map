{"version":3,"file":"FileError.test.js","sourceRoot":"","sources":["../../../../src/pluginFramework/logging/test/FileError.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,4CAA0D;AAE1D,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,MAAM,MAAM,GAAc,IAAI,qBAAS,CAAC,SAAS,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEhD,MAAM,MAAM,GAAc,IAAI,qBAAS,CAAC,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC5D,MAAM,MAAM,GAAc,IAAI,qBAAS,CAAC,SAAS,EAAE,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,QAAQ,cAAsB,CAAC,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;QAErF,MAAM,MAAM,GAAc,IAAI,qBAAS,CAAC,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,CAAC,QAAQ,cAAsB,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAElF,MAAM,MAAM,GAAc,IAAI,qBAAS,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;QACnE,MAAM,CAAC,MAAM,CAAC,QAAQ,cAAsB,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC5D,MAAM,MAAM,GAAc,IAAI,qBAAS,CAAC,SAAS,EAAE,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,QAAQ,sBAA8B,CAAC,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;QAE9F,MAAM,MAAM,GAAc,IAAI,qBAAS,CAAC,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,CAAC,QAAQ,sBAA8B,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;QAE3F,MAAM,MAAM,GAAc,IAAI,qBAAS,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;QACnE,MAAM,CAAC,MAAM,CAAC,QAAQ,sBAA8B,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { FileError, FileErrorFormat } from '../FileError';\r\n\r\ndescribe('FileError', () => {\r\n  it('normalizes slashes in file paths', () => {\r\n    const error1: FileError = new FileError('message', 'path\\\\to\\\\file', 0);\r\n    expect(error1.filePath).toEqual('path/to/file');\r\n\r\n    const error2: FileError = new FileError('message', 'path/to/file', 0);\r\n    expect(error2.filePath).toEqual('path/to/file');\r\n  });\r\n\r\n  it('correctly performs Unix-style file path formatting', () => {\r\n    const error1: FileError = new FileError('message', 'path/to/file', 5, 12);\r\n    expect(error1.toString(FileErrorFormat.Unix)).toEqual('path/to/file:5:12 - message');\r\n\r\n    const error2: FileError = new FileError('message', 'path/to/file', 5);\r\n    expect(error2.toString(FileErrorFormat.Unix)).toEqual('path/to/file:5 - message');\r\n\r\n    const error3: FileError = new FileError('message', 'path/to/file');\r\n    expect(error3.toString(FileErrorFormat.Unix)).toEqual('path/to/file - message');\r\n  });\r\n\r\n  it('correctly performs Unix-style file path formatting', () => {\r\n    const error1: FileError = new FileError('message', 'path/to/file', 5, 12);\r\n    expect(error1.toString(FileErrorFormat.VisualStudio)).toEqual('path/to/file(5,12) - message');\r\n\r\n    const error2: FileError = new FileError('message', 'path/to/file', 5);\r\n    expect(error2.toString(FileErrorFormat.VisualStudio)).toEqual('path/to/file(5) - message');\r\n\r\n    const error3: FileError = new FileError('message', 'path/to/file');\r\n    expect(error3.toString(FileErrorFormat.VisualStudio)).toEqual('path/to/file - message');\r\n  });\r\n});\r\n"]}