{"version":3,"file":"InspectAction.js","sourceRoot":"","sources":["../../src/cli/InspectAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAI3D,yDAAsD;AACtD,wCAAqC;AAErC,MAAa,aAAc,SAAQ,mCAAgB;IAGjD;QACE,KAAK,CAAC;YACJ,UAAU,EAAE,SAAS;YACrB,OAAO,EAAE,iEAAiE;YAC1E,aAAa,EACX,wFAAwF;gBACxF,sCAAsC;SACzC,CAAC,CAAC;IACL,CAAC;IAES,kBAAkB;QAC1B,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAE3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC9C,iBAAiB,EAAE,iBAAiB;YACpC,kBAAkB,EAAE,IAAI;YACxB,WAAW,EAAE,0EAA0E;SACxF,CAAC,CAAC;IACL,CAAC;IAES,KAAK,CAAC,SAAS;QACvB,MAAM,OAAO,GAAY,IAAI,iBAAO,EAAE,CAAC;QACvC,MAAM,OAAO,CAAC,WAAW,CACvB,IAAI,CAAC,eAAe,CAAC,KAAM,EAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,EACxB,IAAI,CAAC,cAAc,CAAC,KAAO,EAC3B,IAAI,CAAC,uBAAuB,CAAC,KAAO,CACrC,CAAC;QACF,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAO,CAAC,CAAC;IAC3D,CAAC;CACF;AAjCD,sCAiCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { CommandLineFlagParameter } from '@rushstack/ts-command-line';\r\n\r\nimport { BaseReportAction } from './BaseReportAction';\r\nimport { Rundown } from '../Rundown';\r\n\r\nexport class InspectAction extends BaseReportAction {\r\n  private _traceParameter!: CommandLineFlagParameter;\r\n\r\n  public constructor() {\r\n    super({\r\n      actionName: 'inspect',\r\n      summary: 'Invoke a Node.js script and generate detailed diagnostic output',\r\n      documentation:\r\n        'Invoke a Node.js script and generate detailed diagnostic output.  This command is used' +\r\n        ' to inspect performance regressions.'\r\n    });\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    super.onDefineParameters();\r\n\r\n    this._traceParameter = this.defineFlagParameter({\r\n      parameterLongName: '--trace-imports',\r\n      parameterShortName: '-t',\r\n      description: 'Reports the call chain for each module path, showing how it was imported'\r\n    });\r\n  }\r\n\r\n  protected async onExecute(): Promise<void> {\r\n    const rundown: Rundown = new Rundown();\r\n    await rundown.invokeAsync(\r\n      this.scriptParameter.value!,\r\n      this.argsParameter.value,\r\n      this.quietParameter.value!!,\r\n      this.ignoreExitCodeParameter.value!!\r\n    );\r\n    rundown.writeInspectReport(this._traceParameter.value!!);\r\n  }\r\n}\r\n"]}