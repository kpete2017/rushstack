{"version":3,"file":"BuildCacheConfiguration.js","sourceRoot":"","sources":["../../src/api/BuildCacheConfiguration.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport {\r\n  JsonFile,\r\n  JsonSchema,\r\n  FileSystem,\r\n  AlreadyReportedError,\r\n  Terminal,\r\n  Import\r\n} from '@rushstack/node-core-library';\r\n\r\nimport { RushConfiguration } from './RushConfiguration';\r\nimport { FileSystemBuildCacheProvider } from '../logic/buildCache/FileSystemBuildCacheProvider';\r\nimport { RushConstants } from '../logic/RushConstants';\r\nimport { CloudBuildCacheProviderBase } from '../logic/buildCache/CloudBuildCacheProviderBase';\r\nimport { RushUserConfiguration } from './RushUserConfiguration';\r\nimport { EnvironmentConfiguration } from './EnvironmentConfiguration';\r\nimport { CacheEntryId, GetCacheEntryIdFunction } from '../logic/buildCache/CacheEntryId';\r\n\r\nconst AzureStorageBuildCacheProviderModule: typeof import('../logic/buildCache/AzureStorageBuildCacheProvider') =\r\n  Import.lazy('../logic/buildCache/AzureStorageBuildCacheProvider', require);\r\nimport type {\r\n  AzureEnvironmentNames,\r\n  AzureStorageBuildCacheProvider\r\n} from '../logic/buildCache/AzureStorageBuildCacheProvider';\r\nconst AmazonS3BuildCacheProviderModule: typeof import('../logic/buildCache/AmazonS3/AmazonS3BuildCacheProvider') =\r\n  Import.lazy('../logic/buildCache/AmazonS3/AmazonS3BuildCacheProvider', require);\r\nimport type { AmazonS3BuildCacheProvider } from '../logic/buildCache/AmazonS3/AmazonS3BuildCacheProvider';\r\n\r\n/**\r\n * Describes the file structure for the \"common/config/rush/build-cache.json\" config file.\r\n */\r\ninterface IBaseBuildCacheJson {\r\n  buildCacheEnabled: boolean;\r\n  cacheProvider: 'azure-blob-storage' | 'amazon-s3' | 'local-only';\r\n  cacheEntryNamePattern?: string;\r\n}\r\n\r\ninterface IAzureBlobStorageBuildCacheJson extends IBaseBuildCacheJson {\r\n  cacheProvider: 'azure-blob-storage';\r\n\r\n  azureBlobStorageConfiguration: IAzureStorageConfigurationJson;\r\n}\r\n\r\ninterface IAmazonS3BuildCacheJson extends IBaseBuildCacheJson {\r\n  cacheProvider: 'amazon-s3';\r\n\r\n  amazonS3Configuration: IAmazonS3ConfigurationJson;\r\n}\r\n\r\ninterface ILocalBuildCacheJson extends IBaseBuildCacheJson {\r\n  cacheProvider: 'local-only';\r\n}\r\n\r\ntype IBuildCacheJson = IAzureBlobStorageBuildCacheJson | IAmazonS3BuildCacheJson | ILocalBuildCacheJson;\r\n\r\ninterface IAzureStorageConfigurationJson {\r\n  /**\r\n   * The name of the the Azure storage account to use for build cache.\r\n   */\r\n  storageAccountName: string;\r\n\r\n  /**\r\n   * The name of the container in the Azure storage account to use for build cache.\r\n   */\r\n  storageContainerName: string;\r\n\r\n  /**\r\n   * The Azure environment the storage account exists in. Defaults to AzureCloud.\r\n   */\r\n  azureEnvironment?: AzureEnvironmentNames;\r\n\r\n  /**\r\n   * An optional prefix for cache item blob names.\r\n   */\r\n  blobPrefix?: string;\r\n\r\n  /**\r\n   * If set to true, allow writing to the cache. Defaults to false.\r\n   */\r\n  isCacheWriteAllowed?: boolean;\r\n}\r\n\r\ninterface IAmazonS3ConfigurationJson {\r\n  /**\r\n   * The Amazon S3 region of the bucket to use for build cache (e.g. \"us-east-1\").\r\n   */\r\n  s3Region: string;\r\n\r\n  /**\r\n   * The name of the bucket in Amazon S3 to use for build cache.\r\n   */\r\n  s3Bucket: string;\r\n\r\n  /**\r\n   * An optional prefix (\"folder\") for cache items.\r\n   */\r\n  s3Prefix?: string;\r\n\r\n  /**\r\n   * If set to true, allow writing to the cache. Defaults to false.\r\n   */\r\n  isCacheWriteAllowed?: boolean;\r\n}\r\n\r\ninterface IBuildCacheConfigurationOptions {\r\n  buildCacheJson: IBuildCacheJson;\r\n  getCacheEntryId: GetCacheEntryIdFunction;\r\n  rushConfiguration: RushConfiguration;\r\n  rushUserConfiguration: RushUserConfiguration;\r\n}\r\n\r\n/**\r\n * Use this class to load and save the \"common/config/rush/build-cache.json\" config file.\r\n * This file provides configuration options for cached project build output.\r\n * @public\r\n */\r\nexport class BuildCacheConfiguration {\r\n  private static _jsonSchema: JsonSchema = JsonSchema.fromFile(\r\n    path.join(__dirname, '..', 'schemas', 'build-cache.schema.json')\r\n  );\r\n\r\n  /**\r\n   * Indicates whether the build cache feature is enabled.\r\n   * Typically it is enabled in the build-cache.json config file.\r\n   */\r\n  public readonly buildCacheEnabled: boolean;\r\n\r\n  public readonly getCacheEntryId: GetCacheEntryIdFunction;\r\n  public readonly localCacheProvider: FileSystemBuildCacheProvider;\r\n  public readonly cloudCacheProvider: CloudBuildCacheProviderBase | undefined;\r\n\r\n  private constructor(options: IBuildCacheConfigurationOptions) {\r\n    this.buildCacheEnabled =\r\n      EnvironmentConfiguration.buildCacheEnabled ?? options.buildCacheJson.buildCacheEnabled;\r\n\r\n    this.getCacheEntryId = options.getCacheEntryId;\r\n    this.localCacheProvider = new FileSystemBuildCacheProvider({\r\n      rushUserConfiguration: options.rushUserConfiguration,\r\n      rushConfiguration: options.rushConfiguration\r\n    });\r\n\r\n    const { buildCacheJson } = options;\r\n    switch (buildCacheJson.cacheProvider) {\r\n      case 'local-only': {\r\n        // Don't configure a cloud cache provider\r\n        break;\r\n      }\r\n\r\n      case 'azure-blob-storage': {\r\n        this.cloudCacheProvider = this._createAzureStorageBuildCacheProvider(\r\n          buildCacheJson.azureBlobStorageConfiguration\r\n        );\r\n        break;\r\n      }\r\n\r\n      case 'amazon-s3': {\r\n        this.cloudCacheProvider = this._createAmazonS3BuildCacheProvider(\r\n          buildCacheJson.amazonS3Configuration\r\n        );\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        throw new Error(`Unexpected cache provider: ${(buildCacheJson as IBuildCacheJson).cacheProvider}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempts to load the build-cache.json data from the standard file path `common/config/rush/build-cache.json`.\r\n   * If the file has not been created yet, then undefined is returned.\r\n   */\r\n  public static async tryLoadAsync(\r\n    terminal: Terminal,\r\n    rushConfiguration: RushConfiguration\r\n  ): Promise<BuildCacheConfiguration | undefined> {\r\n    const jsonFilePath: string = BuildCacheConfiguration.getBuildCacheConfigFilePath(rushConfiguration);\r\n    if (!FileSystem.exists(jsonFilePath)) {\r\n      return undefined;\r\n    }\r\n    return await BuildCacheConfiguration._loadAsync(jsonFilePath, terminal, rushConfiguration);\r\n  }\r\n\r\n  /**\r\n   * Loads the build-cache.json data from the standard file path `common/config/rush/build-cache.json`.\r\n   * If the file has not been created yet, or if the feature is not enabled, then an error is reported.\r\n   */\r\n  public static async loadAndRequireEnabledAsync(\r\n    terminal: Terminal,\r\n    rushConfiguration: RushConfiguration\r\n  ): Promise<BuildCacheConfiguration> {\r\n    const jsonFilePath: string = BuildCacheConfiguration.getBuildCacheConfigFilePath(rushConfiguration);\r\n    if (!FileSystem.exists(jsonFilePath)) {\r\n      terminal.writeErrorLine(\r\n        `The build cache feature is not enabled. This config file is missing:\\n` + jsonFilePath\r\n      );\r\n      terminal.writeLine(`\\nThe Rush website documentation has instructions for enabling the build cache.`);\r\n      throw new AlreadyReportedError();\r\n    }\r\n\r\n    const buildCacheConfiguration: BuildCacheConfiguration = await BuildCacheConfiguration._loadAsync(\r\n      jsonFilePath,\r\n      terminal,\r\n      rushConfiguration\r\n    );\r\n\r\n    if (!buildCacheConfiguration.buildCacheEnabled) {\r\n      terminal.writeErrorLine(\r\n        `The build cache feature is not enabled. You can enable it by editing this config file:\\n` +\r\n          jsonFilePath\r\n      );\r\n      throw new AlreadyReportedError();\r\n    }\r\n    return buildCacheConfiguration;\r\n  }\r\n\r\n  private static async _loadAsync(\r\n    jsonFilePath: string,\r\n    terminal: Terminal,\r\n    rushConfiguration: RushConfiguration\r\n  ): Promise<BuildCacheConfiguration> {\r\n    const buildCacheJson: IBuildCacheJson = await JsonFile.loadAndValidateAsync(\r\n      jsonFilePath,\r\n      BuildCacheConfiguration._jsonSchema\r\n    );\r\n    const rushUserConfiguration: RushUserConfiguration = await RushUserConfiguration.initializeAsync();\r\n\r\n    let getCacheEntryId: GetCacheEntryIdFunction;\r\n    try {\r\n      getCacheEntryId = CacheEntryId.parsePattern(buildCacheJson.cacheEntryNamePattern);\r\n    } catch (e) {\r\n      terminal.writeErrorLine(\r\n        `Error parsing cache entry name pattern \"${buildCacheJson.cacheEntryNamePattern}\": ${e}`\r\n      );\r\n      throw new AlreadyReportedError();\r\n    }\r\n\r\n    return new BuildCacheConfiguration({\r\n      buildCacheJson,\r\n      getCacheEntryId,\r\n      rushConfiguration,\r\n      rushUserConfiguration\r\n    });\r\n  }\r\n\r\n  public static getBuildCacheConfigFilePath(rushConfiguration: RushConfiguration): string {\r\n    return path.resolve(rushConfiguration.commonRushConfigFolder, RushConstants.buildCacheFilename);\r\n  }\r\n\r\n  private _createAzureStorageBuildCacheProvider(\r\n    azureStorageConfigurationJson: IAzureStorageConfigurationJson\r\n  ): AzureStorageBuildCacheProvider {\r\n    return new AzureStorageBuildCacheProviderModule.AzureStorageBuildCacheProvider({\r\n      storageAccountName: azureStorageConfigurationJson.storageAccountName,\r\n      storageContainerName: azureStorageConfigurationJson.storageContainerName,\r\n      azureEnvironment: azureStorageConfigurationJson.azureEnvironment,\r\n      blobPrefix: azureStorageConfigurationJson.blobPrefix,\r\n      isCacheWriteAllowed: !!azureStorageConfigurationJson.isCacheWriteAllowed\r\n    });\r\n  }\r\n\r\n  private _createAmazonS3BuildCacheProvider(\r\n    amazonS3ConfigurationJson: IAmazonS3ConfigurationJson\r\n  ): AmazonS3BuildCacheProvider {\r\n    return new AmazonS3BuildCacheProviderModule.AmazonS3BuildCacheProvider({\r\n      s3Region: amazonS3ConfigurationJson.s3Region,\r\n      s3Bucket: amazonS3ConfigurationJson.s3Bucket,\r\n      s3Prefix: amazonS3ConfigurationJson.s3Prefix,\r\n      isCacheWriteAllowed: !!amazonS3ConfigurationJson.isCacheWriteAllowed\r\n    });\r\n  }\r\n}\r\n"]}