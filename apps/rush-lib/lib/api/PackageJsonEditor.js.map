{"version":3,"file":"PackageJsonEditor.js","sourceRoot":"","sources":["../../src/api/PackageJsonEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as semver from 'semver';\r\nimport { Import, InternalError, IPackageJson, JsonFile, Sort } from '@rushstack/node-core-library';\r\n\r\nconst lodash: typeof import('lodash') = Import.lazy('lodash', require);\r\n\r\n/**\r\n * @beta\r\n */\r\nexport const enum DependencyType {\r\n  Regular = 'dependencies',\r\n  Dev = 'devDependencies',\r\n  Optional = 'optionalDependencies',\r\n  Peer = 'peerDependencies',\r\n  YarnResolutions = 'resolutions'\r\n}\r\n\r\n/**\r\n * @beta\r\n */\r\nexport class PackageJsonDependency {\r\n  private _type: DependencyType;\r\n  private _name: string;\r\n  private _version: string;\r\n  private _onChange: () => void;\r\n\r\n  public constructor(name: string, version: string, type: DependencyType, onChange: () => void) {\r\n    this._name = name;\r\n    this._version = version;\r\n    this._type = type;\r\n    this._onChange = onChange;\r\n  }\r\n\r\n  public get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public get version(): string {\r\n    return this._version;\r\n  }\r\n\r\n  public setVersion(newVersion: string): void {\r\n    if (!semver.valid(newVersion) && !semver.validRange(newVersion)) {\r\n      throw new Error(`Cannot set version to invalid value: \"${newVersion}\"`);\r\n    }\r\n    this._version = newVersion;\r\n    this._onChange();\r\n  }\r\n\r\n  public get dependencyType(): DependencyType {\r\n    return this._type;\r\n  }\r\n}\r\n\r\n/**\r\n * @beta\r\n */\r\nexport class PackageJsonEditor {\r\n  private readonly _filePath: string;\r\n  private readonly _dependencies: Map<string, PackageJsonDependency>;\r\n  // NOTE: The \"devDependencies\" section is tracked separately because sometimes people\r\n  // will specify a specific version for development, while *also* specifying a broader\r\n  // SemVer range in one of the other fields for consumers.  Thus \"dependencies\", \"optionalDependencies\",\r\n  // and \"peerDependencies\" are mutually exclusive, but \"devDependencies\" is not.\r\n  private readonly _devDependencies: Map<string, PackageJsonDependency>;\r\n\r\n  // NOTE: The \"resolutions\" field is a yarn specific feature that controls package\r\n  // resolution override within yarn.\r\n  private readonly _resolutions: Map<string, PackageJsonDependency>;\r\n  private _modified: boolean;\r\n  private _sourceData: IPackageJson;\r\n\r\n  private constructor(filepath: string, data: IPackageJson) {\r\n    this._filePath = filepath;\r\n    this._sourceData = data;\r\n    this._modified = false;\r\n\r\n    this._dependencies = new Map<string, PackageJsonDependency>();\r\n    this._devDependencies = new Map<string, PackageJsonDependency>();\r\n    this._resolutions = new Map<string, PackageJsonDependency>();\r\n\r\n    const dependencies: { [key: string]: string } = data.dependencies || {};\r\n    const optionalDependencies: { [key: string]: string } = data.optionalDependencies || {};\r\n    const peerDependencies: { [key: string]: string } = data.peerDependencies || {};\r\n\r\n    const devDependencies: { [key: string]: string } = data.devDependencies || {};\r\n    const resolutions: { [key: string]: string } = data.resolutions || {};\r\n\r\n    const _onChange: () => void = this._onChange.bind(this);\r\n\r\n    try {\r\n      Object.keys(dependencies || {}).forEach((packageName: string) => {\r\n        if (Object.prototype.hasOwnProperty.call(optionalDependencies, packageName)) {\r\n          throw new Error(\r\n            `The package \"${packageName}\" cannot be listed in both ` +\r\n              `\"dependencies\" and \"optionalDependencies\"`\r\n          );\r\n        }\r\n        if (Object.prototype.hasOwnProperty.call(peerDependencies, packageName)) {\r\n          throw new Error(\r\n            `The package \"${packageName}\" cannot be listed in both \"dependencies\" and \"peerDependencies\"`\r\n          );\r\n        }\r\n\r\n        this._dependencies.set(\r\n          packageName,\r\n          new PackageJsonDependency(packageName, dependencies[packageName], DependencyType.Regular, _onChange)\r\n        );\r\n      });\r\n\r\n      Object.keys(optionalDependencies || {}).forEach((packageName: string) => {\r\n        if (Object.prototype.hasOwnProperty.call(peerDependencies, packageName)) {\r\n          throw new Error(\r\n            `The package \"${packageName}\" cannot be listed in both ` +\r\n              `\"optionalDependencies\" and \"peerDependencies\"`\r\n          );\r\n        }\r\n        this._dependencies.set(\r\n          packageName,\r\n          new PackageJsonDependency(\r\n            packageName,\r\n            optionalDependencies[packageName],\r\n            DependencyType.Optional,\r\n            _onChange\r\n          )\r\n        );\r\n      });\r\n\r\n      Object.keys(peerDependencies || {}).forEach((packageName: string) => {\r\n        this._dependencies.set(\r\n          packageName,\r\n          new PackageJsonDependency(\r\n            packageName,\r\n            peerDependencies[packageName],\r\n            DependencyType.Peer,\r\n            _onChange\r\n          )\r\n        );\r\n      });\r\n\r\n      Object.keys(devDependencies || {}).forEach((packageName: string) => {\r\n        this._devDependencies.set(\r\n          packageName,\r\n          new PackageJsonDependency(packageName, devDependencies[packageName], DependencyType.Dev, _onChange)\r\n        );\r\n      });\r\n\r\n      Object.keys(resolutions || {}).forEach((packageName: string) => {\r\n        this._resolutions.set(\r\n          packageName,\r\n          new PackageJsonDependency(\r\n            packageName,\r\n            resolutions[packageName],\r\n            DependencyType.YarnResolutions,\r\n            _onChange\r\n          )\r\n        );\r\n      });\r\n\r\n      // (Do not sort this._resolutions because order may be significant; the RFC is unclear about that.)\r\n      Sort.sortMapKeys(this._dependencies);\r\n      Sort.sortMapKeys(this._devDependencies);\r\n    } catch (e) {\r\n      throw new Error(`Error loading \"${filepath}\": ${e.message}`);\r\n    }\r\n  }\r\n\r\n  public static load(filePath: string): PackageJsonEditor {\r\n    return new PackageJsonEditor(filePath, JsonFile.load(filePath));\r\n  }\r\n\r\n  public static fromObject(object: IPackageJson, filename: string): PackageJsonEditor {\r\n    return new PackageJsonEditor(filename, object);\r\n  }\r\n\r\n  public get name(): string {\r\n    return this._sourceData.name;\r\n  }\r\n\r\n  public get version(): string {\r\n    return this._sourceData.version;\r\n  }\r\n\r\n  public get filePath(): string {\r\n    return this._filePath;\r\n  }\r\n\r\n  /**\r\n   * The list of dependencies of type DependencyType.Regular, DependencyType.Optional, or DependencyType.Peer.\r\n   */\r\n  public get dependencyList(): ReadonlyArray<PackageJsonDependency> {\r\n    return [...this._dependencies.values()];\r\n  }\r\n\r\n  /**\r\n   * The list of dependencies of type DependencyType.Dev.\r\n   */\r\n  public get devDependencyList(): ReadonlyArray<PackageJsonDependency> {\r\n    return [...this._devDependencies.values()];\r\n  }\r\n\r\n  /**\r\n   * This field is a Yarn-specific feature that allows overriding of package resolution.\r\n   *\r\n   * @remarks\r\n   * See the {@link https://github.com/yarnpkg/rfcs/blob/master/implemented/0000-selective-versions-resolutions.md\r\n   * | 0000-selective-versions-resolutions.md RFC} for details.\r\n   */\r\n  public get resolutionsList(): ReadonlyArray<PackageJsonDependency> {\r\n    return [...this._resolutions.values()];\r\n  }\r\n\r\n  public tryGetDependency(packageName: string): PackageJsonDependency | undefined {\r\n    return this._dependencies.get(packageName);\r\n  }\r\n\r\n  public tryGetDevDependency(packageName: string): PackageJsonDependency | undefined {\r\n    return this._devDependencies.get(packageName);\r\n  }\r\n\r\n  public addOrUpdateDependency(\r\n    packageName: string,\r\n    newVersion: string,\r\n    dependencyType: DependencyType\r\n  ): void {\r\n    const dependency: PackageJsonDependency = new PackageJsonDependency(\r\n      packageName,\r\n      newVersion,\r\n      dependencyType,\r\n      this._onChange.bind(this)\r\n    );\r\n\r\n    // Rush collapses everything that isn't a devDependency into the dependencies\r\n    // field, so we need to set the value depending on dependency type\r\n    switch (dependencyType) {\r\n      case DependencyType.Regular:\r\n      case DependencyType.Optional:\r\n      case DependencyType.Peer:\r\n        this._dependencies.set(packageName, dependency);\r\n        break;\r\n      case DependencyType.Dev:\r\n        this._devDependencies.set(packageName, dependency);\r\n        break;\r\n      case DependencyType.YarnResolutions:\r\n        this._resolutions.set(packageName, dependency);\r\n        break;\r\n      default:\r\n        throw new InternalError('Unsupported DependencyType');\r\n    }\r\n\r\n    this._modified = true;\r\n  }\r\n\r\n  public saveIfModified(): boolean {\r\n    if (this._modified) {\r\n      this._modified = false;\r\n      this._sourceData = this._normalize(this._sourceData);\r\n      JsonFile.save(this._sourceData, this._filePath, { updateExistingFile: true });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the normalized package.json that represents the current state of the\r\n   * PackageJsonEditor. This method does not save any changes that were made to the\r\n   * package.json, but instead returns the object representation of what would be saved\r\n   * if saveIfModified() is called.\r\n   */\r\n  public saveToObject(): IPackageJson {\r\n    // Only normalize if we need to\r\n    const sourceData: IPackageJson = this._modified ? this._normalize(this._sourceData) : this._sourceData;\r\n    // Provide a clone to avoid reference back to the original data object\r\n    return lodash.cloneDeep(sourceData);\r\n  }\r\n\r\n  private _onChange(): void {\r\n    this._modified = true;\r\n  }\r\n\r\n  /**\r\n   * Create a normalized shallow copy of the provided package.json without modifying the\r\n   * original. If the result of this method is being returned via a public facing method,\r\n   * it will still need to be deep-cloned to avoid propogating changes back to the\r\n   * original dataset.\r\n   */\r\n  private _normalize(source: IPackageJson): IPackageJson {\r\n    const normalizedData: IPackageJson = { ...source };\r\n    delete normalizedData.dependencies;\r\n    delete normalizedData.optionalDependencies;\r\n    delete normalizedData.peerDependencies;\r\n    delete normalizedData.devDependencies;\r\n    delete normalizedData.resolutions;\r\n\r\n    const keys: string[] = [...this._dependencies.keys()].sort();\r\n\r\n    for (const packageName of keys) {\r\n      const dependency: PackageJsonDependency = this._dependencies.get(packageName)!;\r\n\r\n      switch (dependency.dependencyType) {\r\n        case DependencyType.Regular:\r\n          if (!normalizedData.dependencies) {\r\n            normalizedData.dependencies = {};\r\n          }\r\n          normalizedData.dependencies[dependency.name] = dependency.version;\r\n          break;\r\n        case DependencyType.Optional:\r\n          if (!normalizedData.optionalDependencies) {\r\n            normalizedData.optionalDependencies = {};\r\n          }\r\n          normalizedData.optionalDependencies[dependency.name] = dependency.version;\r\n          break;\r\n        case DependencyType.Peer:\r\n          if (!normalizedData.peerDependencies) {\r\n            normalizedData.peerDependencies = {};\r\n          }\r\n          normalizedData.peerDependencies[dependency.name] = dependency.version;\r\n          break;\r\n        case DependencyType.Dev: // uses this._devDependencies instead\r\n        case DependencyType.YarnResolutions: // uses this._resolutions instead\r\n        default:\r\n          throw new InternalError('Unsupported DependencyType');\r\n      }\r\n    }\r\n\r\n    const devDependenciesKeys: string[] = [...this._devDependencies.keys()].sort();\r\n\r\n    for (const packageName of devDependenciesKeys) {\r\n      const dependency: PackageJsonDependency = this._devDependencies.get(packageName)!;\r\n\r\n      if (!normalizedData.devDependencies) {\r\n        normalizedData.devDependencies = {};\r\n      }\r\n      normalizedData.devDependencies[dependency.name] = dependency.version;\r\n    }\r\n\r\n    // (Do not sort this._resolutions because order may be significant; the RFC is unclear about that.)\r\n    for (const packageName of this._resolutions.keys()) {\r\n      const dependency: PackageJsonDependency = this._resolutions.get(packageName)!;\r\n\r\n      if (!normalizedData.resolutions) {\r\n        normalizedData.resolutions = {};\r\n      }\r\n      normalizedData.resolutions[dependency.name] = dependency.version;\r\n    }\r\n\r\n    return normalizedData;\r\n  }\r\n}\r\n"]}