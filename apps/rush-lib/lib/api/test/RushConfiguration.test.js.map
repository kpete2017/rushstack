{"version":3,"file":"RushConfiguration.test.js","sourceRoot":"","sources":["../../../src/api/test/RushConfiguration.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport { Text } from '@rushstack/node-core-library';\r\nimport { RushConfiguration } from '../RushConfiguration';\r\nimport { ApprovedPackagesPolicy } from '../ApprovedPackagesPolicy';\r\nimport { RushConfigurationProject } from '../RushConfigurationProject';\r\nimport { Utilities } from '../../utilities/Utilities';\r\nimport { EnvironmentConfiguration } from '../EnvironmentConfiguration';\r\n\r\nfunction normalizePathForComparison(pathToNormalize: string): string {\r\n  return Text.replaceAll(pathToNormalize, '\\\\', '/').toUpperCase();\r\n}\r\n\r\nfunction assertPathProperty(validatedPropertyName: string, absolutePath: string, relativePath: string): void {\r\n  const resolvedRelativePath: string = path.resolve(__dirname, relativePath);\r\n  expect(normalizePathForComparison(absolutePath)).toEqual(normalizePathForComparison(resolvedRelativePath));\r\n}\r\n\r\ndescribe('RushConfiguration', () => {\r\n  let _oldEnv: typeof process.env;\r\n\r\n  beforeEach(() => {\r\n    _oldEnv = process.env;\r\n    process.env = {};\r\n\r\n    process.env['USERPROFILE'] = _oldEnv['USERPROFILE']; // eslint-disable-line dot-notation\r\n    process.env['HOME'] = _oldEnv['HOME']; // eslint-disable-line dot-notation\r\n  });\r\n\r\n  afterEach(() => {\r\n    process.env = _oldEnv;\r\n  });\r\n\r\n  it(\"can't load too new rush\", (done: jest.DoneCallback) => {\r\n    const rushFilename: string = path.resolve(__dirname, 'repo', 'rush-too-new.json');\r\n\r\n    expect(() => {\r\n      RushConfiguration.loadFromConfigurationFile(rushFilename);\r\n    }).toThrow('Unable to load rush-too-new.json because its RushVersion is 99.0.0');\r\n\r\n    done();\r\n  });\r\n\r\n  it('can load repo/rush-npm.json', (done: jest.DoneCallback) => {\r\n    const rushFilename: string = path.resolve(__dirname, 'repo', 'rush-npm.json');\r\n    const rushConfiguration: RushConfiguration = RushConfiguration.loadFromConfigurationFile(rushFilename);\r\n\r\n    expect(rushConfiguration.packageManager).toEqual('npm');\r\n    assertPathProperty(\r\n      'committedShrinkwrapFilename',\r\n      rushConfiguration.committedShrinkwrapFilename,\r\n      './repo/common/config/rush/npm-shrinkwrap.json'\r\n    );\r\n    assertPathProperty('commonFolder', rushConfiguration.commonFolder, './repo/common');\r\n    assertPathProperty(\r\n      'commonRushConfigFolder',\r\n      rushConfiguration.commonRushConfigFolder,\r\n      './repo/common/config/rush'\r\n    );\r\n    assertPathProperty('commonTempFolder', rushConfiguration.commonTempFolder, './repo/common/temp');\r\n    assertPathProperty('npmCacheFolder', rushConfiguration.npmCacheFolder, './repo/common/temp/npm-cache');\r\n    assertPathProperty('npmTmpFolder', rushConfiguration.npmTmpFolder, './repo/common/temp/npm-tmp');\r\n    expect(rushConfiguration.pnpmOptions.pnpmStore).toEqual('local');\r\n    assertPathProperty(\r\n      'pnpmStorePath',\r\n      rushConfiguration.pnpmOptions.pnpmStorePath,\r\n      './repo/common/temp/pnpm-store'\r\n    );\r\n    assertPathProperty(\r\n      'packageManagerToolFilename',\r\n      rushConfiguration.packageManagerToolFilename,\r\n      './repo/common/temp/npm-local/node_modules/.bin/npm'\r\n    );\r\n    assertPathProperty('rushJsonFolder', rushConfiguration.rushJsonFolder, './repo');\r\n\r\n    expect(rushConfiguration.packageManagerToolVersion).toEqual('4.5.0');\r\n\r\n    expect(rushConfiguration.repositoryUrl).toEqual('someFakeUrl');\r\n    expect(rushConfiguration.projectFolderMaxDepth).toEqual(99);\r\n    expect(rushConfiguration.projectFolderMinDepth).toEqual(1);\r\n    expect(rushConfiguration.hotfixChangeEnabled).toEqual(true);\r\n\r\n    expect(rushConfiguration.projects).toHaveLength(3);\r\n\r\n    // \"approvedPackagesPolicy\" feature\r\n    const approvedPackagesPolicy: ApprovedPackagesPolicy = rushConfiguration.approvedPackagesPolicy;\r\n    expect(approvedPackagesPolicy.enabled).toEqual(true);\r\n    expect(Utilities.getSetAsArray(approvedPackagesPolicy.reviewCategories)).toEqual([\r\n      'first-party',\r\n      'third-party',\r\n      'prototype'\r\n    ]);\r\n\r\n    expect(Utilities.getSetAsArray(approvedPackagesPolicy.ignoredNpmScopes)).toEqual(['@types', '@internal']);\r\n\r\n    expect(approvedPackagesPolicy.browserApprovedPackages.items[0].packageName).toEqual('example');\r\n    expect(approvedPackagesPolicy.browserApprovedPackages.items[0].allowedCategories.size).toEqual(3);\r\n\r\n    expect(rushConfiguration.telemetryEnabled).toBe(false);\r\n\r\n    // Validate project1 settings\r\n    const project1: RushConfigurationProject = rushConfiguration.getProjectByName('project1')!;\r\n    expect(project1).toBeDefined();\r\n\r\n    expect(project1.packageName).toEqual('project1');\r\n    assertPathProperty('project1.projectFolder', project1.projectFolder, './repo/project1');\r\n    expect(project1.tempProjectName).toEqual('@rush-temp/project1');\r\n    expect(project1.unscopedTempProjectName).toEqual('project1');\r\n    expect(project1.skipRushCheck).toEqual(false);\r\n\r\n    // Validate project2 settings\r\n    const project2: RushConfigurationProject = rushConfiguration.getProjectByName('project2')!;\r\n    expect(project2.skipRushCheck).toEqual(true);\r\n\r\n    done();\r\n  });\r\n\r\n  it('can load repo/rush-pnpm.json', (done: jest.DoneCallback) => {\r\n    const rushFilename: string = path.resolve(__dirname, 'repo', 'rush-pnpm.json');\r\n    const rushConfiguration: RushConfiguration = RushConfiguration.loadFromConfigurationFile(rushFilename);\r\n\r\n    expect(rushConfiguration.packageManager).toEqual('pnpm');\r\n    expect(rushConfiguration.shrinkwrapFilename).toEqual('pnpm-lock.yaml');\r\n    assertPathProperty(\r\n      'committedShrinkwrapFilename',\r\n      rushConfiguration.getCommittedShrinkwrapFilename(),\r\n      './repo/common/config/rush/pnpm-lock.yaml'\r\n    );\r\n    assertPathProperty(\r\n      'getPnpmfilePath',\r\n      rushConfiguration.getPnpmfilePath(),\r\n      './repo/common/config/rush/.pnpmfile.cjs'\r\n    );\r\n    assertPathProperty('commonFolder', rushConfiguration.commonFolder, './repo/common');\r\n    assertPathProperty(\r\n      'commonRushConfigFolder',\r\n      rushConfiguration.commonRushConfigFolder,\r\n      './repo/common/config/rush'\r\n    );\r\n    assertPathProperty('commonTempFolder', rushConfiguration.commonTempFolder, './repo/common/temp');\r\n    assertPathProperty('npmCacheFolder', rushConfiguration.npmCacheFolder, './repo/common/temp/npm-cache');\r\n    assertPathProperty('npmTmpFolder', rushConfiguration.npmTmpFolder, './repo/common/temp/npm-tmp');\r\n    expect(rushConfiguration.pnpmOptions.pnpmStore).toEqual('local');\r\n    assertPathProperty(\r\n      'pnpmStorePath',\r\n      rushConfiguration.pnpmOptions.pnpmStorePath,\r\n      './repo/common/temp/pnpm-store'\r\n    );\r\n    assertPathProperty(\r\n      'packageManagerToolFilename',\r\n      rushConfiguration.packageManagerToolFilename,\r\n      './repo/common/temp/pnpm-local/node_modules/.bin/pnpm'\r\n    );\r\n    assertPathProperty('rushJsonFolder', rushConfiguration.rushJsonFolder, './repo');\r\n\r\n    expect(rushConfiguration.packageManagerToolVersion).toEqual('6.0.0');\r\n\r\n    expect(rushConfiguration.repositoryUrl).toEqual('someFakeUrl');\r\n    expect(rushConfiguration.projectFolderMaxDepth).toEqual(99);\r\n    expect(rushConfiguration.projectFolderMinDepth).toEqual(1);\r\n\r\n    expect(rushConfiguration.projects).toHaveLength(3);\r\n\r\n    // \"approvedPackagesPolicy\" feature\r\n    const approvedPackagesPolicy: ApprovedPackagesPolicy = rushConfiguration.approvedPackagesPolicy;\r\n    expect(approvedPackagesPolicy.enabled).toBe(true);\r\n    expect(Utilities.getSetAsArray(approvedPackagesPolicy.reviewCategories)).toEqual([\r\n      'first-party',\r\n      'third-party',\r\n      'prototype'\r\n    ]);\r\n    expect(Utilities.getSetAsArray(approvedPackagesPolicy.ignoredNpmScopes)).toEqual(['@types', '@internal']);\r\n\r\n    expect(approvedPackagesPolicy.browserApprovedPackages.items[0].packageName).toEqual('example');\r\n    expect(approvedPackagesPolicy.browserApprovedPackages.items[0].allowedCategories.size).toEqual(3);\r\n\r\n    expect(rushConfiguration.telemetryEnabled).toBe(false);\r\n\r\n    // Validate project1 settings\r\n    const project1: RushConfigurationProject = rushConfiguration.getProjectByName('project1')!;\r\n    expect(project1).toBeDefined();\r\n\r\n    expect(project1.packageName).toEqual('project1');\r\n    assertPathProperty('project1.projectFolder', project1.projectFolder, './repo/project1');\r\n    expect(project1.tempProjectName).toEqual('@rush-temp/project1');\r\n    expect(project1.unscopedTempProjectName).toEqual('project1');\r\n\r\n    done();\r\n  });\r\n\r\n  it('can load repo/rush-pnpm-5.json', (done: jest.DoneCallback) => {\r\n    const rushFilename: string = path.resolve(__dirname, 'repo', 'rush-pnpm-5.json');\r\n    const rushConfiguration: RushConfiguration = RushConfiguration.loadFromConfigurationFile(rushFilename);\r\n\r\n    expect(rushConfiguration.packageManager).toEqual('pnpm');\r\n    expect(rushConfiguration.packageManagerToolVersion).toEqual('5.0.0');\r\n    expect(rushConfiguration.shrinkwrapFilename).toEqual('pnpm-lock.yaml');\r\n    assertPathProperty(\r\n      'getPnpmfilePath',\r\n      rushConfiguration.getPnpmfilePath(),\r\n      './repo/common/config/rush/pnpmfile.js'\r\n    );\r\n\r\n    done();\r\n  });\r\n\r\n  it('allows the temp directory to be set via environment variable', () => {\r\n    const expectedValue: string = path.resolve('/var/temp');\r\n    process.env['RUSH_TEMP_FOLDER'] = expectedValue; // eslint-disable-line dot-notation\r\n\r\n    const rushFilename: string = path.resolve(__dirname, 'repo', 'rush-pnpm.json');\r\n    const rushConfiguration: RushConfiguration = RushConfiguration.loadFromConfigurationFile(rushFilename);\r\n\r\n    assertPathProperty('commonTempFolder', rushConfiguration.commonTempFolder, expectedValue);\r\n    assertPathProperty(\r\n      'npmCacheFolder',\r\n      rushConfiguration.npmCacheFolder,\r\n      path.join(expectedValue, 'npm-cache')\r\n    );\r\n    assertPathProperty('npmTmpFolder', rushConfiguration.npmTmpFolder, path.join(expectedValue, 'npm-tmp'));\r\n\r\n    expect(rushConfiguration.pnpmOptions.pnpmStore).toEqual('local');\r\n    assertPathProperty(\r\n      'pnpmStorePath',\r\n      rushConfiguration.pnpmOptions.pnpmStorePath,\r\n      path.join(expectedValue, 'pnpm-store')\r\n    );\r\n    assertPathProperty(\r\n      'packageManagerToolFilename',\r\n      rushConfiguration.packageManagerToolFilename,\r\n      `${expectedValue}/pnpm-local/node_modules/.bin/pnpm`\r\n    );\r\n  });\r\n\r\n  describe('PNPM Store Paths', () => {\r\n    afterEach(() => {\r\n      EnvironmentConfiguration['_pnpmStorePathOverride'] = undefined;\r\n    });\r\n\r\n    const PNPM_STORE_PATH_ENV: string = 'RUSH_PNPM_STORE_PATH';\r\n\r\n    describe('Loading repo/rush-pnpm-local.json', () => {\r\n      const RUSH_JSON_FILENAME: string = path.resolve(__dirname, 'repo', 'rush-pnpm-local.json');\r\n\r\n      it(`loads the correct path when pnpmStore = \"local\"`, (done: jest.DoneCallback) => {\r\n        const EXPECT_STORE_PATH: string = path.resolve(__dirname, 'repo', 'common', 'temp', 'pnpm-store');\r\n        const rushConfiguration: RushConfiguration =\r\n          RushConfiguration.loadFromConfigurationFile(RUSH_JSON_FILENAME);\r\n\r\n        expect(rushConfiguration.packageManager).toEqual('pnpm');\r\n        expect(rushConfiguration.pnpmOptions.pnpmStore).toEqual('local');\r\n        expect(rushConfiguration.pnpmOptions.pnpmStorePath).toEqual(EXPECT_STORE_PATH);\r\n        expect(path.isAbsolute(rushConfiguration.pnpmOptions.pnpmStorePath)).toEqual(true);\r\n\r\n        done();\r\n      });\r\n\r\n      it('loads the correct path when environment variable is defined', (done: jest.DoneCallback) => {\r\n        const EXPECT_STORE_PATH: string = path.resolve('/var/temp');\r\n        process.env[PNPM_STORE_PATH_ENV] = EXPECT_STORE_PATH;\r\n\r\n        const rushConfiguration: RushConfiguration =\r\n          RushConfiguration.loadFromConfigurationFile(RUSH_JSON_FILENAME);\r\n\r\n        expect(rushConfiguration.packageManager).toEqual('pnpm');\r\n        expect(rushConfiguration.pnpmOptions.pnpmStore).toEqual('local');\r\n        expect(rushConfiguration.pnpmOptions.pnpmStorePath).toEqual(EXPECT_STORE_PATH);\r\n        expect(path.isAbsolute(rushConfiguration.pnpmOptions.pnpmStorePath)).toEqual(true);\r\n\r\n        done();\r\n      });\r\n    });\r\n\r\n    describe('Loading repo/rush-pnpm-global.json', () => {\r\n      const RUSH_JSON_FILENAME: string = path.resolve(__dirname, 'repo', 'rush-pnpm-global.json');\r\n\r\n      it(`loads the correct path when pnpmStore = \"global\"`, (done: jest.DoneCallback) => {\r\n        const EXPECT_STORE_PATH: string = '';\r\n        const rushConfiguration: RushConfiguration =\r\n          RushConfiguration.loadFromConfigurationFile(RUSH_JSON_FILENAME);\r\n\r\n        expect(rushConfiguration.packageManager).toEqual('pnpm');\r\n        expect(rushConfiguration.pnpmOptions.pnpmStore).toEqual('global');\r\n        expect(rushConfiguration.pnpmOptions.pnpmStorePath).toEqual(EXPECT_STORE_PATH);\r\n\r\n        done();\r\n      });\r\n\r\n      it('loads the correct path when environment variable is defined', (done: jest.DoneCallback) => {\r\n        const EXPECT_STORE_PATH: string = path.resolve('/var/temp');\r\n        process.env[PNPM_STORE_PATH_ENV] = EXPECT_STORE_PATH;\r\n\r\n        const rushConfiguration: RushConfiguration =\r\n          RushConfiguration.loadFromConfigurationFile(RUSH_JSON_FILENAME);\r\n\r\n        expect(rushConfiguration.packageManager).toEqual('pnpm');\r\n        expect(rushConfiguration.pnpmOptions.pnpmStore).toEqual('global');\r\n        expect(rushConfiguration.pnpmOptions.pnpmStorePath).toEqual(EXPECT_STORE_PATH);\r\n\r\n        done();\r\n      });\r\n    });\r\n\r\n    it(`throws an error when invalid pnpmStore is defined`, (done: jest.DoneCallback) => {\r\n      const RUSH_JSON_FILENAME: string = path.resolve(__dirname, 'repo', 'rush-pnpm-invalid-store.json');\r\n      expect(() => {\r\n        // @ts-ignore\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const rushConfiguration: RushConfiguration =\r\n          RushConfiguration.loadFromConfigurationFile(RUSH_JSON_FILENAME);\r\n      }).toThrow();\r\n\r\n      done();\r\n    });\r\n  });\r\n});\r\n"]}