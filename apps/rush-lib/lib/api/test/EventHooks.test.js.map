{"version":3,"file":"EventHooks.test.js","sourceRoot":"","sources":["../../../src/api/test/EventHooks.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,4DAAyD;AACzD,8CAAkD;AAElD,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD,MAAM,YAAY,GAAW,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC;QAC9E,MAAM,iBAAiB,GAAsB,qCAAiB,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC;QACvG,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAK,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,UAAU,GAAe,IAAI,uBAAU,CAAC,EAAE,CAAC,CAAC;QAClD,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAK,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,aAAa,GAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACrD,MAAM,UAAU,GAAe,IAAI,uBAAU,CAAC;YAC5C,aAAa,EAAE,aAAa;SAC7B,CAAC,CAAC;QACH,MAAM,WAAW,GAAa,UAAU,CAAC,GAAG,CAAC,kBAAK,CAAC,aAAa,CAAC,CAAC;QAClE,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { RushConfiguration } from '../RushConfiguration';\r\nimport { Event, EventHooks } from '../EventHooks';\r\n\r\ndescribe('EventHooks', () => {\r\n  it('loads a post build hook from rush.json', () => {\r\n    const rushFilename: string = path.resolve(__dirname, 'repo', 'rush-npm.json');\r\n    const rushConfiguration: RushConfiguration = RushConfiguration.loadFromConfigurationFile(rushFilename);\r\n    expect(rushConfiguration.eventHooks.get(Event.postRushBuild)).toEqual(['do something']);\r\n  });\r\n\r\n  it('loads empty rush hooks', () => {\r\n    const eventHooks: EventHooks = new EventHooks({});\r\n    expect(eventHooks.get(Event.postRushBuild)).toHaveLength(0);\r\n  });\r\n\r\n  it('loads two rush hooks', () => {\r\n    const expectedHooks: string[] = ['do one', 'do two'];\r\n    const eventHooks: EventHooks = new EventHooks({\r\n      postRushBuild: expectedHooks\r\n    });\r\n    const resultHooks: string[] = eventHooks.get(Event.postRushBuild);\r\n    expect(resultHooks).toEqual(expectedHooks);\r\n  });\r\n});\r\n"]}