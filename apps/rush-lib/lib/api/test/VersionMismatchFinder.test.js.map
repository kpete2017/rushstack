{"version":3,"file":"VersionMismatchFinder.test.js","sourceRoot":"","sources":["../../../src/api/test/VersionMismatchFinder.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport { RushConfigurationProject } from '../RushConfigurationProject';\r\nimport { VersionMismatchFinder } from '../../logic/versionMismatch/VersionMismatchFinder';\r\nimport { PackageJsonEditor } from '../PackageJsonEditor';\r\nimport { CommonVersionsConfiguration } from '../CommonVersionsConfiguration';\r\nimport { VersionMismatchFinderEntity } from '../../logic/versionMismatch/VersionMismatchFinderEntity';\r\nimport { VersionMismatchFinderProject } from '../../logic/versionMismatch/VersionMismatchFinderProject';\r\nimport { VersionMismatchFinderCommonVersions } from '../../logic/versionMismatch/VersionMismatchFinderCommonVersions';\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\ndescribe('VersionMismatchFinder', () => {\r\n  it('finds no mismatches if there are none', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB]);\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(0);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(0);\r\n    done();\r\n  });\r\n\r\n  it('finds a mismatch in two packages', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB]);\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(1);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(1);\r\n    expect(mismatchFinder.getMismatches()[0]).toEqual('@types/foo');\r\n    expect(mismatchFinder.getVersionsOfMismatch('@types/foo')!.sort()).toEqual(['1.2.3', '2.0.0']);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '2.0.0')).toEqual([projectB]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '1.2.3')).toEqual([projectA]);\r\n    done();\r\n  });\r\n\r\n  it('ignores cyclic dependencies', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>(['@types/foo'])\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB]);\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(0);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(0);\r\n    done();\r\n  });\r\n\r\n  it(\"won't let you access mismatches that don\\t exist\", (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB]);\r\n    expect(mismatchFinder.getVersionsOfMismatch('@types/foobar')).toEqual(undefined);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/fobar', '2.0.0')).toEqual(undefined);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '9.9.9')).toEqual(undefined);\r\n    done();\r\n  });\r\n\r\n  it('finds two mismatches in two different pairs of projects', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectC: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'C',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            mocha: '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectD: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'D',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            mocha: '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([\r\n      projectA,\r\n      projectB,\r\n      projectC,\r\n      projectD\r\n    ]);\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(2);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(2);\r\n    expect(mismatchFinder.getMismatches()).toMatchObject(['@types/foo', 'mocha']);\r\n    expect(mismatchFinder.getVersionsOfMismatch('@types/foo')!.sort()).toEqual(['1.2.3', '2.0.0']);\r\n    expect(mismatchFinder.getVersionsOfMismatch('mocha')!.sort()).toEqual(['1.2.3', '2.0.0']);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '1.2.3')).toEqual([projectA]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '2.0.0')).toEqual([projectB]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('mocha', '1.2.3')).toEqual([projectC]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('mocha', '2.0.0')).toEqual([projectD]);\r\n    done();\r\n  });\r\n\r\n  it('finds three mismatches in three projects', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectC: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'C',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '9.9.9',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB, projectC]);\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(1);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(1);\r\n    expect(mismatchFinder.getMismatches()).toMatchObject(['@types/foo']);\r\n    expect(mismatchFinder.getVersionsOfMismatch('@types/foo')!.sort()).toEqual(['1.2.3', '2.0.0', '9.9.9']);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '1.2.3')).toEqual([projectA]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '2.0.0')).toEqual([projectB]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '9.9.9')).toEqual([projectC]);\r\n    done();\r\n  });\r\n\r\n  it('checks dev dependencies', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          devDependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB]);\r\n\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(1);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(1);\r\n    expect(mismatchFinder.getMismatches()[0]).toEqual('@types/foo');\r\n    expect(mismatchFinder.getVersionsOfMismatch('@types/foo')!.sort()).toEqual(['1.2.3', '2.0.0']);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '2.0.0')).toEqual([projectB]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '1.2.3')).toEqual([projectA]);\r\n    done();\r\n  });\r\n\r\n  it('does not check peer dependencies', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          peerDependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB]);\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(0);\r\n    done();\r\n  });\r\n\r\n  it('checks optional dependencies', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          optionalDependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB]);\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(1);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(1);\r\n    expect(mismatchFinder.getMismatches()[0]).toEqual('@types/foo');\r\n    expect(mismatchFinder.getVersionsOfMismatch('@types/foo')!.sort()).toEqual(['1.2.3', '2.0.0']);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '2.0.0')).toEqual([projectB]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@types/foo', '1.2.3')).toEqual([projectA]);\r\n    done();\r\n  });\r\n\r\n  it('allows alternative versions', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'B',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@types/foo': '2.0.0',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n\r\n    const alternatives: Map<string, ReadonlyArray<string>> = new Map<string, ReadonlyArray<string>>();\r\n    alternatives.set('@types/foo', ['2.0.0']);\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder(\r\n      [projectA, projectB],\r\n      alternatives\r\n    );\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(0);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(0);\r\n    done();\r\n  });\r\n\r\n  it('handles the common-versions.json file correctly', (done: jest.DoneCallback) => {\r\n    const projectA: VersionMismatchFinderEntity = new VersionMismatchFinderProject({\r\n      packageName: 'A',\r\n      packageJsonEditor: PackageJsonEditor.fromObject(\r\n        {\r\n          dependencies: {\r\n            '@scope/library-1': '1.2.3',\r\n            karma: '0.0.1'\r\n          }\r\n        } as any,\r\n        'foo.json'\r\n      ),\r\n      cyclicDependencyProjects: new Set<string>()\r\n    } as any as RushConfigurationProject);\r\n    const projectB: VersionMismatchFinderEntity = new VersionMismatchFinderCommonVersions(\r\n      CommonVersionsConfiguration.loadFromFile(path.resolve(__dirname, 'jsonFiles', 'common-versions.json'))\r\n    );\r\n\r\n    const mismatchFinder: VersionMismatchFinder = new VersionMismatchFinder([projectA, projectB]);\r\n    expect(mismatchFinder.numberOfMismatches).toEqual(1);\r\n    expect(mismatchFinder.getMismatches()).toHaveLength(1);\r\n    expect(mismatchFinder.getMismatches()[0]).toEqual('@scope/library-1');\r\n    expect(mismatchFinder.getVersionsOfMismatch('@scope/library-1')!.sort()).toEqual(['1.2.3', '~3.2.1']);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@scope/library-1', '~3.2.1')).toEqual([projectB]);\r\n    expect(mismatchFinder.getConsumersOfMismatch('@scope/library-1', '1.2.3')).toEqual([projectA]);\r\n    done();\r\n  });\r\n});\r\n"]}