{"version":3,"file":"Cli.test.js","sourceRoot":"","sources":["../../../src/cli/test/Cli.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAE7B,yDAAsD;AAEtD,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;IACnB,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACpD,MAAM,UAAU,GAAW,GAAG,CAAC;QAC/B,MAAM,SAAS,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC,CAAC;QAEtF,MAAM,CAAC,GAAG,EAAE;YACV,qBAAS,CAAC,cAAc,CAAC;gBACvB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE,CAAC,SAAS,CAAC;gBACjB,gBAAgB,EAAE,UAAU;gBAC5B,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,iBAAiB;QACjB,MAAM,SAAS,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC,CAAC;QAEvF,kEAAkE;QAClE,MAAM,MAAM,GAAW,qBAAS,CAAC,8BAA8B,CAC7D,MAAM,EACN,CAAC,SAAS,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EACxC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,eAAe,CAAC,CAC9C,CAAC;QACF,MAAM,QAAQ,GACZ,MAAM;aACH,KAAK,CAAC,UAAU,CAAC;aACjB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;aAChB,GAAG,EAAE,IAAI,EAAE,CAAC;QACjB,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,iBAAiB;QACjB,MAAM,SAAS,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC,CAAC;QAEvF,MAAM,MAAM,GAAG,qBAAS,CAAC,8BAA8B,CACrD,MAAM,EACN,CAAC,SAAS,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EACxC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,2BAA2B,CAAC,CAC1D,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CACpB,MAAM,CAAC,cAAc,CACnB,8GAA8G,CAC/G,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport { Utilities } from '../../utilities/Utilities';\r\n\r\ndescribe('CLI', () => {\r\n  it('should not fail when there is no rush.json', () => {\r\n    const workingDir: string = '/';\r\n    const startPath: string = path.resolve(path.join(__dirname, '../../../lib/start.js'));\r\n\r\n    expect(() => {\r\n      Utilities.executeCommand({\r\n        command: 'node',\r\n        args: [startPath],\r\n        workingDirectory: workingDir,\r\n        suppressOutput: true\r\n      });\r\n    }).not.toThrow();\r\n  });\r\n\r\n  it('rushx should pass args to scripts', () => {\r\n    // Invoke \"rushx\"\r\n    const startPath: string = path.resolve(path.join(__dirname, '../../../lib/startx.js'));\r\n\r\n    // Run \"rushx show-args 1 2 -x\" in the \"repo/rushx-project\" folder\r\n    const output: string = Utilities.executeCommandAndCaptureOutput(\r\n      'node',\r\n      [startPath, 'show-args', '1', '2', '-x'],\r\n      path.join(__dirname, 'repo', 'rushx-project')\r\n    );\r\n    const lastLine: string =\r\n      output\r\n        .split(/\\s*\\n\\s*/)\r\n        .filter((x) => x)\r\n        .pop() || '';\r\n    expect(lastLine).toEqual('build.js: ARGS=[\"1\",\"2\",\"-x\"]');\r\n  });\r\n\r\n  it('rushx should fail in un-rush project', () => {\r\n    // Invoke \"rushx\"\r\n    const startPath: string = path.resolve(path.join(__dirname, '../../../lib/startx.js'));\r\n\r\n    const output = Utilities.executeCommandAndCaptureOutput(\r\n      'node',\r\n      [startPath, 'show-args', '1', '2', '-x'],\r\n      path.join(__dirname, 'repo', 'rushx-not-in-rush-project')\r\n    );\r\n\r\n    console.log(output);\r\n\r\n    expect(output).toEqual(\r\n      expect.stringMatching(\r\n        'Warning: You are invoking \"rushx\" inside a Rush repository, but this project is not registered in rush.json.'\r\n      )\r\n    );\r\n  });\r\n});\r\n"]}