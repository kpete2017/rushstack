{"version":3,"file":"Npm.test.js","sourceRoot":"","sources":["../../../src/utilities/test/Npm.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;AAE3D,sDAA8B;AAE9B,gCAA6B;AAC7B,4CAAyC;AAEzC,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;IACnB,MAAM,WAAW,GAAW,2BAA2B,CAAC;IACxD,IAAI,IAAsB,CAAC;IAE3B,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAS,EAAE,gCAAgC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE;QACzE,MAAM,IAAI,GAAW;;;;;;;MAOnB,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAExC,MAAM,QAAQ,GAAa,SAAG,CAAC,iBAAiB,CAAC,WAAW,EAAE,SAAS,EAAE,iBAAO,CAAC,GAAG,CAAC,CAAC;QAEtF,MAAM,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAC/B,KAAK,EACL,QAAQ,WAAW,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,EAC5C,MAAM,CAAC,QAAQ,EAAE,EACjB,MAAM,CAAC,QAAQ,EAAE,EACjB,MAAM,CAAC,QAAQ,EAAE,CAClB,CAAC;QAEF,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;QAC5E,MAAM,IAAI,GAAW;;;;;MAKnB,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAExC,MAAM,QAAQ,GAAa,SAAG,CAAC,iBAAiB,CAAC,WAAW,EAAE,SAAS,EAAE,iBAAO,CAAC,GAAG,CAAC,CAAC;QAEtF,MAAM,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAC/B,KAAK,EACL,QAAQ,WAAW,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,EAC5C,MAAM,CAAC,QAAQ,EAAE,EACjB,MAAM,CAAC,QAAQ,EAAE,EACjB,MAAM,CAAC,QAAQ,EAAE,CAClB,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAC/B,KAAK,EACL,QAAQ,WAAW,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,EAChD,MAAM,CAAC,QAAQ,EAAE,EACjB,MAAM,CAAC,QAAQ,EAAE,EACjB,MAAM,CAAC,QAAQ,EAAE,CAClB,CAAC;QAEF,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport process from 'process';\r\n\r\nimport { Npm } from '../Npm';\r\nimport { Utilities } from '../Utilities';\r\n\r\ndescribe('npm', () => {\r\n  const packageName: string = '@microsoft/rush-lib-never';\r\n  let stub: jest.SpyInstance;\r\n\r\n  beforeEach(() => {\r\n    stub = jest.spyOn(Utilities, 'executeCommandAndCaptureOutput');\r\n  });\r\n\r\n  afterEach(() => {\r\n    stub.mockReset();\r\n    stub.mockRestore();\r\n  });\r\n\r\n  it('publishedVersions gets versions when package time is available.', () => {\r\n    const json: string = `{\r\n      \"modified\": \"2017-03-30T18:37:27.757Z\",\r\n      \"created\": \"2017-01-03T20:28:10.342Z\",\r\n      \"0.0.0\": \"2017-01-03T20:28:10.342Z\",\r\n      \"1.4.0\": \"2017-01-03T21:55:21.249Z\",\r\n      \"1.4.1\": \"2017-01-09T19:22:00.488Z\",\r\n      \"2.4.0-alpha.1\": \"2017-03-30T18:37:27.757Z\"\r\n    }`;\r\n    stub.mockImplementationOnce(() => json);\r\n\r\n    const versions: string[] = Npm.publishedVersions(packageName, __dirname, process.env);\r\n\r\n    expect(stub).toHaveBeenCalledWith(\r\n      'npm',\r\n      `view ${packageName} time --json`.split(' '),\r\n      expect.anything(),\r\n      expect.anything(),\r\n      expect.anything()\r\n    );\r\n\r\n    expect(versions).toHaveLength(4);\r\n    expect(versions).toMatchObject(['0.0.0', '1.4.0', '1.4.1', '2.4.0-alpha.1']);\r\n  });\r\n\r\n  it('publishedVersions gets versions when package time is not available', () => {\r\n    const json: string = `[\r\n      \"0.0.0\",\r\n      \"1.4.0\",\r\n      \"1.4.1\",\r\n      \"2.4.0-alpha.1\"\r\n    ]`;\r\n    stub.mockImplementationOnce(() => '');\r\n    stub.mockImplementationOnce(() => json);\r\n\r\n    const versions: string[] = Npm.publishedVersions(packageName, __dirname, process.env);\r\n\r\n    expect(stub).toHaveBeenCalledWith(\r\n      'npm',\r\n      `view ${packageName} time --json`.split(' '),\r\n      expect.anything(),\r\n      expect.anything(),\r\n      expect.anything()\r\n    );\r\n    expect(stub).toHaveBeenCalledWith(\r\n      'npm',\r\n      `view ${packageName} versions --json`.split(' '),\r\n      expect.anything(),\r\n      expect.anything(),\r\n      expect.anything()\r\n    );\r\n\r\n    expect(versions).toHaveLength(4);\r\n    expect(versions).toMatchObject(['0.0.0', '1.4.0', '1.4.1', '2.4.0-alpha.1']);\r\n  });\r\n});\r\n"]}