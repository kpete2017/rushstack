{"version":3,"file":"PackageChangeAnalyzer.test.js","sourceRoot":"","sources":["../../../src/logic/test/PackageChangeAnalyzer.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { StringBufferTerminalProvider, Terminal } from '@rushstack/node-core-library';\r\nimport { PackageChangeAnalyzer } from '../PackageChangeAnalyzer';\r\nimport { RushConfiguration } from '../../api/RushConfiguration';\r\nimport { EnvironmentConfiguration } from '../../api/EnvironmentConfiguration';\r\nimport { RushConfigurationProject } from '../../api/RushConfigurationProject';\r\nimport { RushProjectConfiguration } from '../../api/RushProjectConfiguration';\r\n\r\ndescribe('PackageChangeAnalyzer', () => {\r\n  beforeEach(() => {\r\n    jest.spyOn(EnvironmentConfiguration, 'gitBinaryPath', 'get').mockReturnValue(undefined);\r\n    jest.spyOn(RushProjectConfiguration, 'tryLoadForProjectAsync').mockResolvedValue(undefined);\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.resetAllMocks();\r\n  });\r\n\r\n  function createTestSubject(\r\n    projects: RushConfigurationProject[],\r\n    files: Map<string, string>\r\n  ): PackageChangeAnalyzer {\r\n    const rushConfiguration: RushConfiguration = {\r\n      commonRushConfigFolder: '',\r\n      projects,\r\n      rushJsonFolder: '',\r\n      getCommittedShrinkwrapFilename(): string {\r\n        return 'common/config/rush/pnpm-lock.yaml';\r\n      },\r\n      findProjectForPosixRelativePath(path: string): object | undefined {\r\n        return projects.find((project) => path.startsWith(project.projectRelativeFolder));\r\n      }\r\n    } as RushConfiguration;\r\n\r\n    const subject: PackageChangeAnalyzer = new PackageChangeAnalyzer(rushConfiguration);\r\n\r\n    subject['_getRepoDeps'] = jest.fn(() => {\r\n      return files;\r\n    });\r\n\r\n    return subject;\r\n  }\r\n\r\n  describe('getPackageDeps', () => {\r\n    it('returns the files for the specified project', async () => {\r\n      const projects: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject,\r\n        {\r\n          packageName: 'banana',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/banana'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const files: Map<string, string> = new Map([\r\n        ['apps/apple/core.js', 'a101'],\r\n        ['apps/banana/peel.js', 'b201']\r\n      ]);\r\n      const subject: PackageChangeAnalyzer = createTestSubject(projects, files);\r\n      const terminal: Terminal = new Terminal(new StringBufferTerminalProvider());\r\n\r\n      expect(await subject.getPackageDeps('apple', terminal)).toEqual(\r\n        new Map([['apps/apple/core.js', 'a101']])\r\n      );\r\n      expect(await subject.getPackageDeps('banana', terminal)).toEqual(\r\n        new Map([['apps/banana/peel.js', 'b201']])\r\n      );\r\n    });\r\n\r\n    it('ignores files specified by project configuration files, relative to project folder', async () => {\r\n      // rush-project.json configuration for 'apple'\r\n      jest.spyOn(RushProjectConfiguration, 'tryLoadForProjectAsync').mockResolvedValueOnce({\r\n        incrementalBuildIgnoredGlobs: ['assets/*.png', '*.js.map']\r\n      } as RushProjectConfiguration);\r\n      // rush-project.json configuration for 'banana' does not exist\r\n      jest.spyOn(RushProjectConfiguration, 'tryLoadForProjectAsync').mockResolvedValueOnce(undefined);\r\n\r\n      const projects: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject,\r\n        {\r\n          packageName: 'banana',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/banana'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const files: Map<string, string> = new Map([\r\n        ['apps/apple/core.js', 'a101'],\r\n        ['apps/apple/core.js.map', 'a102'],\r\n        ['apps/apple/assets/one.jpg', 'a103'],\r\n        ['apps/apple/assets/two.png', 'a104'],\r\n        ['apps/banana/peel.js', 'b201'],\r\n        ['apps/banana/peel.js.map', 'b202']\r\n      ]);\r\n      const subject: PackageChangeAnalyzer = createTestSubject(projects, files);\r\n      const terminal: Terminal = new Terminal(new StringBufferTerminalProvider());\r\n\r\n      expect(await subject.getPackageDeps('apple', terminal)).toEqual(\r\n        new Map([\r\n          ['apps/apple/core.js', 'a101'],\r\n          ['apps/apple/assets/one.jpg', 'a103']\r\n        ])\r\n      );\r\n      expect(await subject.getPackageDeps('banana', terminal)).toEqual(\r\n        new Map([\r\n          ['apps/banana/peel.js', 'b201'],\r\n          ['apps/banana/peel.js.map', 'b202']\r\n        ])\r\n      );\r\n    });\r\n\r\n    it('interprets ignored globs as a dot-ignore file (not as individually handled globs)', async () => {\r\n      // rush-project.json configuration for 'apple'\r\n      jest.spyOn(RushProjectConfiguration, 'tryLoadForProjectAsync').mockResolvedValue({\r\n        incrementalBuildIgnoredGlobs: ['*.png', 'assets/*.psd', '!assets/important/**']\r\n      } as RushProjectConfiguration);\r\n\r\n      const projects: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const files: Map<string, string> = new Map([\r\n        ['apps/apple/one.png', 'a101'],\r\n        ['apps/apple/assets/two.psd', 'a102'],\r\n        ['apps/apple/assets/three.png', 'a103'],\r\n        ['apps/apple/assets/important/four.png', 'a104'],\r\n        ['apps/apple/assets/important/five.psd', 'a105'],\r\n        ['apps/apple/src/index.ts', 'a106']\r\n      ]);\r\n      const subject: PackageChangeAnalyzer = createTestSubject(projects, files);\r\n      const terminal: Terminal = new Terminal(new StringBufferTerminalProvider());\r\n\r\n      // In a dot-ignore file, the later rule '!assets/important/**' should override the previous\r\n      // rule of '*.png'. This unit test verifies that this behavior doesn't change later if\r\n      // we modify the implementation.\r\n      expect(await subject.getPackageDeps('apple', terminal)).toEqual(\r\n        new Map([\r\n          ['apps/apple/assets/important/four.png', 'a104'],\r\n          ['apps/apple/assets/important/five.psd', 'a105'],\r\n          ['apps/apple/src/index.ts', 'a106']\r\n        ])\r\n      );\r\n    });\r\n\r\n    it('includes the committed shrinkwrap file as a dep for all projects', async () => {\r\n      const projects: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject,\r\n        {\r\n          packageName: 'banana',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/banana'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const files: Map<string, string> = new Map([\r\n        ['apps/apple/core.js', 'a101'],\r\n        ['apps/banana/peel.js', 'b201'],\r\n        ['common/config/rush/pnpm-lock.yaml', 'ffff'],\r\n        ['tools/random-file.js', 'e00e']\r\n      ]);\r\n      const subject: PackageChangeAnalyzer = createTestSubject(projects, files);\r\n      const terminal: Terminal = new Terminal(new StringBufferTerminalProvider());\r\n\r\n      expect(await subject.getPackageDeps('apple', terminal)).toEqual(\r\n        new Map([\r\n          ['apps/apple/core.js', 'a101'],\r\n          ['common/config/rush/pnpm-lock.yaml', 'ffff']\r\n        ])\r\n      );\r\n      expect(await subject.getPackageDeps('banana', terminal)).toEqual(\r\n        new Map([\r\n          ['apps/banana/peel.js', 'b201'],\r\n          ['common/config/rush/pnpm-lock.yaml', 'ffff']\r\n        ])\r\n      );\r\n    });\r\n\r\n    it('returns undefined if the specified project does not exist', async () => {\r\n      const projects: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const files: Map<string, string> = new Map([['apps/apple/core.js', 'a101']]);\r\n      const subject: PackageChangeAnalyzer = createTestSubject(projects, files);\r\n      const terminal: Terminal = new Terminal(new StringBufferTerminalProvider());\r\n\r\n      expect(await subject.getPackageDeps('carrot', terminal)).toBeUndefined();\r\n    });\r\n\r\n    it('lazy-loads project data and caches it for future calls', async () => {\r\n      const projects: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const files: Map<string, string> = new Map([['apps/apple/core.js', 'a101']]);\r\n      const subject: PackageChangeAnalyzer = createTestSubject(projects, files);\r\n      const terminal: Terminal = new Terminal(new StringBufferTerminalProvider());\r\n\r\n      // Because other unit tests rely on the fact that a freshly instantiated\r\n      // PackageChangeAnalyzer is inert until someone actually requests project data,\r\n      // this test makes that expectation explicit.\r\n\r\n      expect(subject['_data']).toBeNull();\r\n      expect(await subject.getPackageDeps('apple', terminal)).toEqual(\r\n        new Map([['apps/apple/core.js', 'a101']])\r\n      );\r\n      expect(subject['_data']).toBeDefined();\r\n      expect(await subject.getPackageDeps('apple', terminal)).toEqual(\r\n        new Map([['apps/apple/core.js', 'a101']])\r\n      );\r\n      expect(subject['_getRepoDeps']).toHaveBeenCalledTimes(1);\r\n    });\r\n  });\r\n\r\n  describe('getProjectStateHash', () => {\r\n    it('returns a fixed hash snapshot for a set of project deps', async () => {\r\n      const projects: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const files: Map<string, string> = new Map([\r\n        ['apps/apple/core.js', 'a101'],\r\n        ['apps/apple/juice.js', 'e333'],\r\n        ['apps/apple/slices.js', 'a102']\r\n      ]);\r\n      const subject: PackageChangeAnalyzer = createTestSubject(projects, files);\r\n      const terminal: Terminal = new Terminal(new StringBufferTerminalProvider());\r\n\r\n      expect(await subject.getProjectStateHash('apple', terminal)).toMatchInlineSnapshot(\r\n        `\"265536e325cdfac3fa806a51873d927a712fc6c9\"`\r\n      );\r\n    });\r\n\r\n    it('returns the same hash regardless of dep order', async () => {\r\n      const projectsA: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const filesA: Map<string, string> = new Map([\r\n        ['apps/apple/core.js', 'a101'],\r\n        ['apps/apple/juice.js', 'e333'],\r\n        ['apps/apple/slices.js', 'a102']\r\n      ]);\r\n      const subjectA: PackageChangeAnalyzer = createTestSubject(projectsA, filesA);\r\n\r\n      const projectsB: RushConfigurationProject[] = [\r\n        {\r\n          packageName: 'apple',\r\n          projectFolder: 'apps/apple',\r\n          projectRelativeFolder: 'apps/apple'\r\n        } as RushConfigurationProject\r\n      ];\r\n      const filesB: Map<string, string> = new Map([\r\n        ['apps/apple/slices.js', 'a102'],\r\n        ['apps/apple/core.js', 'a101'],\r\n        ['apps/apple/juice.js', 'e333']\r\n      ]);\r\n      const subjectB: PackageChangeAnalyzer = createTestSubject(projectsB, filesB);\r\n\r\n      const terminal: Terminal = new Terminal(new StringBufferTerminalProvider());\r\n      expect(await subjectA.getProjectStateHash('apple', terminal)).toEqual(\r\n        await subjectB.getProjectStateHash('apple', terminal)\r\n      );\r\n    });\r\n  });\r\n});\r\n"]}