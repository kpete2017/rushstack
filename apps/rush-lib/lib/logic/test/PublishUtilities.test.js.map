{"version":3,"file":"PublishUtilities.test.js","sourceRoot":"","sources":["../../../src/logic/test/PublishUtilities.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport { IChangeInfo, ChangeType } from '../../api/ChangeManagement';\r\nimport { RushConfiguration } from '../../api/RushConfiguration';\r\nimport { RushConfigurationProject } from '../../api/RushConfigurationProject';\r\nimport { PublishUtilities, IChangeInfoHash } from '../PublishUtilities';\r\nimport { ChangeFiles } from '../ChangeFiles';\r\n\r\n/* eslint-disable dot-notation */\r\n\r\ndescribe('findChangeRequests', () => {\r\n  let packagesRushConfiguration: RushConfiguration;\r\n  let repoRushConfiguration: RushConfiguration;\r\n\r\n  beforeEach(() => {\r\n    packagesRushConfiguration = RushConfiguration.loadFromConfigurationFile(\r\n      path.resolve(__dirname, 'packages', 'rush.json')\r\n    );\r\n    repoRushConfiguration = RushConfiguration.loadFromConfigurationFile(\r\n      path.resolve(__dirname, 'repo', 'rush.json')\r\n    );\r\n  });\r\n\r\n  it('returns no changes in an empty change folder', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'noChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(0);\r\n  });\r\n\r\n  it('returns 1 change when changing a leaf package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'leafChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(1);\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('returns 4 changes when patching a root package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootPatchChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(4);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('g');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.dependency);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.0');\r\n  });\r\n\r\n  it('returns 7 changes when hotfixing a root package', () => {\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      packagesRushConfiguration.projectsByName,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootHotfixChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(7);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.hotfix);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['d'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.0-hotfix.0');\r\n  });\r\n\r\n  it('returns 6 changes when major bumping a root package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootMajorChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(6);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.dependency);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.0');\r\n  });\r\n\r\n  it('returns 2 changes when bumping cyclic dependencies', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'cyclicDeps'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(2);\r\n\r\n    expect(allChanges).toHaveProperty('cyclic-dep-1');\r\n    expect(allChanges).toHaveProperty('cyclic-dep-2');\r\n\r\n    expect(allChanges['cyclic-dep-1'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['cyclic-dep-2'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('returns error when mixing hotfix and non-hotfix changes', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    expect(\r\n      PublishUtilities.findChangeRequests.bind(\r\n        PublishUtilities,\r\n        allPackages,\r\n        packagesRushConfiguration,\r\n        new ChangeFiles(path.join(__dirname, 'hotfixWithPatchChanges'))\r\n      )\r\n    ).toThrow('Cannot apply hotfix alongside patch change on same package');\r\n  });\r\n\r\n  it('returns error when adding hotfix with config disabled', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    // Overload hotfixChangeEnabled function\r\n    packagesRushConfiguration['_hotfixChangeEnabled'] = false;\r\n\r\n    expect(\r\n      PublishUtilities.findChangeRequests.bind(\r\n        PublishUtilities,\r\n        allPackages,\r\n        packagesRushConfiguration,\r\n        new ChangeFiles(path.join(__dirname, 'rootHotfixChange'))\r\n      )\r\n    ).toThrow('Cannot add hotfix change; hotfixChangeEnabled is false in configuration.');\r\n  });\r\n\r\n  it('can resolve multiple changes requests on the same package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'multipleChanges'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(6);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.0');\r\n  });\r\n\r\n  it('can resolve multiple reverse-ordered changes requests on the same package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'orderedChanges'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(6);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.0');\r\n  });\r\n\r\n  it('can resolve multiple hotfix changes', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'multipleHotfixChanges'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(7);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.hotfix);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['d'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.0-hotfix.0');\r\n  });\r\n\r\n  it('can update an explicit dependency', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'explicitVersionChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(2);\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('can exclude lock step projects', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = repoRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      repoRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'repo', 'changes')),\r\n      false,\r\n      undefined,\r\n      new Set<string>(['a', 'b', 'e'])\r\n    );\r\n    expect(Object.keys(allChanges)).toHaveLength(5);\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].newVersion).toEqual('3.1.2');\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['d'].newVersion).toEqual('4.1.2');\r\n    expect(allChanges['e'].newVersion).toEqual(allPackages.get('e')!.packageJson.version);\r\n  });\r\n});\r\n\r\ndescribe('sortChangeRequests', () => {\r\n  let rushConfiguration: RushConfiguration;\r\n\r\n  beforeEach(() => {\r\n    rushConfiguration = RushConfiguration.loadFromConfigurationFile(\r\n      path.resolve(__dirname, 'packages', 'rush.json')\r\n    );\r\n  });\r\n\r\n  it('can return a sorted array of the change requests to be published in the correct order', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = rushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      rushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'multipleChanges'))\r\n    );\r\n    const orderedChanges: IChangeInfo[] = PublishUtilities.sortChangeRequests(allChanges);\r\n\r\n    expect(orderedChanges).toHaveLength(6);\r\n    expect(orderedChanges[0].packageName).toEqual('a');\r\n    expect(orderedChanges[1].packageName).toEqual('b');\r\n    expect(orderedChanges[2].packageName).toEqual('e');\r\n    expect(orderedChanges[3].packageName).toEqual('g');\r\n    expect(orderedChanges[4].packageName).toEqual('c');\r\n    expect(orderedChanges[5].packageName).toEqual('f');\r\n  });\r\n});\r\n\r\ndescribe('isRangeDependency', () => {\r\n  it('can test ranges', () => {\r\n    expect(PublishUtilities.isRangeDependency('>=1.0.0 <2.0.0')).toEqual(true);\r\n    expect(PublishUtilities.isRangeDependency('>=1.0.0-pr.1 <2.0.0')).toEqual(true);\r\n    expect(PublishUtilities.isRangeDependency('1.0.0')).toEqual(false);\r\n    expect(PublishUtilities.isRangeDependency('^1.0.0')).toEqual(false);\r\n    expect(PublishUtilities.isRangeDependency('~1.0.0')).toEqual(false);\r\n  });\r\n});\r\n\r\ndescribe('getNewDependencyVersion', () => {\r\n  it('can update dependency versions', () => {\r\n    const dependencies: { [key: string]: string } = {\r\n      a: '~1.0.0',\r\n      b: '^1.0.0',\r\n      c: '>=1.0.0 <2.0.0'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'a', '1.1.0')).toEqual('~1.1.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'b', '1.2.0')).toEqual('^1.2.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'c', '1.3.0')).toEqual('>=1.3.0 <2.0.0');\r\n  });\r\n\r\n  it('can update dependency versions with prereleases', () => {\r\n    const dependencies: { [key: string]: string } = {\r\n      a: '~1.0.0-pr.1',\r\n      b: '^1.0.0-pr.1',\r\n      c: '>=1.0.0-pr.1 <2.0.0'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'a', '1.1.0-pr.1')).toEqual('~1.1.0-pr.1');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'b', '1.2.0-pr.2')).toEqual('^1.2.0-pr.2');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'c', '1.3.0-pr.3')).toEqual(\r\n      '>=1.3.0-pr.3 <2.0.0'\r\n    );\r\n  });\r\n\r\n  it('can update to prerelease', () => {\r\n    const dependencies: { [key: string]: string } = {\r\n      a: '~1.0.0',\r\n      b: '^1.0.0',\r\n      c: '>=1.0.0 <2.0.0'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'a', '1.0.0-hotfix.0')).toEqual(\r\n      '~1.0.0-hotfix.0'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'b', '1.0.0-hotfix.0')).toEqual(\r\n      '^1.0.0-hotfix.0'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'c', '1.0.0-hotfix.0')).toEqual(\r\n      '>=1.0.0-hotfix.0 <2.0.0'\r\n    );\r\n  });\r\n});\r\n\r\ndescribe('findWorkspaceChangeRequests', () => {\r\n  let packagesRushConfiguration: RushConfiguration;\r\n  let repoRushConfiguration: RushConfiguration;\r\n\r\n  beforeEach(() => {\r\n    packagesRushConfiguration = RushConfiguration.loadFromConfigurationFile(\r\n      path.resolve(__dirname, 'workspacePackages', 'rush.json')\r\n    );\r\n    repoRushConfiguration = RushConfiguration.loadFromConfigurationFile(\r\n      path.resolve(__dirname, 'workspaceRepo', 'rush.json')\r\n    );\r\n  });\r\n\r\n  it('returns no changes in an empty change folder', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'noChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(0);\r\n  });\r\n\r\n  it('returns 1 change when changing a leaf package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'leafChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(1);\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('returns 4 changes when patching a root package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootPatchChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(4);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('g');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.patch);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.1');\r\n  });\r\n\r\n  it('returns 7 changes when hotfixing a root package', () => {\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      packagesRushConfiguration.projectsByName,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootHotfixChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(7);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.hotfix);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['d'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.0-hotfix.0');\r\n  });\r\n\r\n  it('returns 6 changes when major bumping a root package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootMajorChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(6);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.patch);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.1');\r\n  });\r\n\r\n  it('returns 2 changes when bumping cyclic dependencies', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'cyclicDeps'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(2);\r\n\r\n    expect(allChanges).toHaveProperty('cyclic-dep-1');\r\n    expect(allChanges).toHaveProperty('cyclic-dep-2');\r\n\r\n    expect(allChanges['cyclic-dep-1'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['cyclic-dep-2'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('returns error when mixing hotfix and non-hotfix changes', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    expect(\r\n      PublishUtilities.findChangeRequests.bind(\r\n        PublishUtilities,\r\n        allPackages,\r\n        packagesRushConfiguration,\r\n        new ChangeFiles(path.join(__dirname, 'hotfixWithPatchChanges'))\r\n      )\r\n    ).toThrow('Cannot apply hotfix alongside patch change on same package');\r\n  });\r\n\r\n  it('returns error when adding hotfix with config disabled', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    // Overload hotfixChangeEnabled function\r\n    packagesRushConfiguration['_hotfixChangeEnabled'] = false;\r\n\r\n    expect(\r\n      PublishUtilities.findChangeRequests.bind(\r\n        PublishUtilities,\r\n        allPackages,\r\n        packagesRushConfiguration,\r\n        new ChangeFiles(path.join(__dirname, 'rootHotfixChange'))\r\n      )\r\n    ).toThrow('Cannot add hotfix change; hotfixChangeEnabled is false in configuration.');\r\n  });\r\n\r\n  it('can resolve multiple changes requests on the same package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'multipleChanges'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(6);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.1');\r\n  });\r\n\r\n  it('can resolve multiple reverse-ordered changes requests on the same package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'orderedChanges'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(6);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.1');\r\n  });\r\n\r\n  it('can resolve multiple hotfix changes', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'multipleHotfixChanges'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(7);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges).toHaveProperty('e');\r\n    expect(allChanges).toHaveProperty('f');\r\n    expect(allChanges).toHaveProperty('g');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['e'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['f'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['g'].changeType).toEqual(ChangeType.hotfix);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['d'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['e'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['f'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['g'].newVersion).toEqual('1.0.0-hotfix.0');\r\n  });\r\n\r\n  it('can update an explicit dependency', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'explicitVersionChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges)).toHaveLength(2);\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('can exclude lock step projects', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = repoRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      repoRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'repo', 'changes')),\r\n      false,\r\n      undefined,\r\n      new Set<string>(['a', 'b', 'e'])\r\n    );\r\n    expect(Object.keys(allChanges)).toHaveLength(5);\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].newVersion).toEqual('3.1.2');\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['d'].newVersion).toEqual('4.1.2');\r\n    expect(allChanges['e'].newVersion).toEqual(allPackages.get('e')!.packageJson.version);\r\n  });\r\n});\r\n\r\ndescribe('getNewWorkspaceDependencyVersion', () => {\r\n  it('can update dependency versions', () => {\r\n    const dependencies: { [key: string]: string } = {\r\n      a: 'workspace:~1.0.0',\r\n      b: 'workspace:^1.0.0',\r\n      c: 'workspace:>=1.0.0 <2.0.0',\r\n      d: 'workspace:*'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'a', '1.1.0')).toEqual('workspace:~1.1.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'b', '1.2.0')).toEqual('workspace:^1.2.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'c', '1.3.0')).toEqual(\r\n      'workspace:>=1.3.0 <2.0.0'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'd', '1.4.0')).toEqual('workspace:*');\r\n  });\r\n\r\n  it('can update dependency versions with prereleases', () => {\r\n    const dependencies: { [key: string]: string } = {\r\n      a: 'workspace:~1.0.0-pr.1',\r\n      b: 'workspace:^1.0.0-pr.1',\r\n      c: 'workspace:>=1.0.0-pr.1 <2.0.0',\r\n      d: 'workspace:*'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'a', '1.1.0-pr.1')).toEqual(\r\n      'workspace:~1.1.0-pr.1'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'b', '1.2.0-pr.2')).toEqual(\r\n      'workspace:^1.2.0-pr.2'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'c', '1.3.0-pr.3')).toEqual(\r\n      'workspace:>=1.3.0-pr.3 <2.0.0'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'd', '1.3.0-pr.3')).toEqual('workspace:*');\r\n  });\r\n\r\n  it('can update to prerelease', () => {\r\n    const dependencies: { [key: string]: string } = {\r\n      a: 'workspace:~1.0.0',\r\n      b: 'workspace:^1.0.0',\r\n      c: 'workspace:>=1.0.0 <2.0.0',\r\n      d: 'workspace:*'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'a', '1.0.0-hotfix.0')).toEqual(\r\n      'workspace:~1.0.0-hotfix.0'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'b', '1.0.0-hotfix.0')).toEqual(\r\n      'workspace:^1.0.0-hotfix.0'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'c', '1.0.0-hotfix.0')).toEqual(\r\n      'workspace:>=1.0.0-hotfix.0 <2.0.0'\r\n    );\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies, 'd', '1.0.0-hotfix.0')).toEqual(\r\n      'workspace:*'\r\n    );\r\n  });\r\n});\r\n"]}