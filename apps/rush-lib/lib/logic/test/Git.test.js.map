{"version":3,"file":"Git.test.js","sourceRoot":"","sources":["../../../src/logic/test/Git.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,gCAA6B;AAE7B,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;IACnB,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;YACnC,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC3E,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,8CAA8C,CAAC,CAAC,CAAC,OAAO,CAC9F,8CAA8C,CAC/C,CAAC;YACF,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,2CAA2C,CAAC,CAAC,CAAC,OAAO,CAC3F,mCAAmC,CACpC,CAAC;YACF,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,CAAC,CAAC,OAAO,CAC5E,8BAA8B,CAC/B,CAAC;YACF,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,gCAAgC,CAAC,CAAC,CAAC,OAAO,CAChF,iCAAiC,CAClC,CAAC;YACF,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,2BAA2B,CAAC,CAAC,CAAC,OAAO,CAC3E,8BAA8B,CAC/B,CAAC;YAEF,kFAAkF;YAClF,gEAAgE;YAChE,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,2BAA2B,CAAC,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YAEtG,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,2BAA2B,CAAC,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YACtG,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,uBAAuB,CAAC,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YACnG,MAAM,CAAC,SAAG,CAAC,4BAA4B,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { Git } from '../Git';\r\n\r\ndescribe('Git', () => {\r\n  describe('normalizeGitUrlToHttps', () => {\r\n    it('correctly normalizes URLs', () => {\r\n      expect(Git.normalizeGitUrlForComparison('invalid.git')).toEqual('invalid');\r\n      expect(Git.normalizeGitUrlForComparison('git@github.com:ExampleOrg/ExampleProject.git')).toEqual(\r\n        'https://github.com/ExampleOrg/ExampleProject'\r\n      );\r\n      expect(Git.normalizeGitUrlForComparison('ssh://user@host.xz:1234/path/to/repo.git/')).toEqual(\r\n        'https://host.xz:1234/path/to/repo'\r\n      );\r\n      expect(Git.normalizeGitUrlForComparison('git://host.xz/path/to/repo')).toEqual(\r\n        'https://host.xz/path/to/repo'\r\n      );\r\n      expect(Git.normalizeGitUrlForComparison('http://host.xz:80/path/to/repo')).toEqual(\r\n        'https://host.xz:80/path/to/repo'\r\n      );\r\n      expect(Git.normalizeGitUrlForComparison('host.xz:path/to/repo.git/')).toEqual(\r\n        'https://host.xz/path/to/repo'\r\n      );\r\n\r\n      // \"This syntax is only recognized if there are no slashes before the first colon.\r\n      // This helps differentiate a local path that contains a colon.\"\r\n      expect(Git.normalizeGitUrlForComparison('host/xz:path/to/repo.git/')).toEqual('host/xz:path/to/repo');\r\n\r\n      expect(Git.normalizeGitUrlForComparison('file:///path/to/repo.git/')).toEqual('file:///path/to/repo');\r\n      expect(Git.normalizeGitUrlForComparison('C:\\\\Windows\\\\Path.txt')).toEqual('C:\\\\Windows\\\\Path.txt');\r\n      expect(Git.normalizeGitUrlForComparison('c:/windows/path.git')).toEqual('c:/windows/path');\r\n    });\r\n  });\r\n});\r\n"]}