{"version":3,"file":"BaseProjectShrinkwrapFile.js","sourceRoot":"","sources":["../../../src/logic/base/BaseProjectShrinkwrapFile.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAA0D;AAG1D,oDAAiD;AAGjD;;;;GAIG;AACH,MAAsB,yBAAyB;IAM7C,YAAmB,cAAkC,EAAE,OAAiC;QACtF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE/F,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;IACxC,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,qBAAqB,CAAC,OAAiC;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,6BAAa,CAAC,yBAAyB,CAAC,CAAC;IAC3F,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,mBAAmB;QAC9B,MAAM,8BAAU,CAAC,eAAe,CAAC,IAAI,CAAC,yBAAyB,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;IAChG,CAAC;IASD;;OAEG;IACH,IAAc,cAAc;QAC1B,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;CACF;AAzCD,8DAyCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { FileSystem } from '@rushstack/node-core-library';\r\n\r\nimport { RushConfigurationProject } from '../../api/RushConfigurationProject';\r\nimport { RushConstants } from '../RushConstants';\r\nimport { BaseShrinkwrapFile } from './BaseShrinkwrapFile';\r\n\r\n/**\r\n * This class handles creating the project/.rush/temp/shrinkwrap-deps.json file\r\n * which tracks the direct and indirect dependencies that a project consumes. This is used\r\n * to better determine which projects should be rebuilt when dependencies are updated.\r\n */\r\nexport abstract class BaseProjectShrinkwrapFile {\r\n  public readonly projectShrinkwrapFilePath: string;\r\n  protected readonly project: RushConfigurationProject;\r\n\r\n  private readonly _shrinkwrapFile: BaseShrinkwrapFile;\r\n\r\n  public constructor(shrinkwrapFile: BaseShrinkwrapFile, project: RushConfigurationProject) {\r\n    this.project = project;\r\n    this.projectShrinkwrapFilePath = BaseProjectShrinkwrapFile.getFilePathForProject(this.project);\r\n\r\n    this._shrinkwrapFile = shrinkwrapFile;\r\n  }\r\n\r\n  /**\r\n   * Get the fully-qualified path to the <project>/.rush/temp/shrinkwrap-deps.json\r\n   * for the specified project.\r\n   */\r\n  public static getFilePathForProject(project: RushConfigurationProject): string {\r\n    return path.join(project.projectRushTempFolder, RushConstants.projectShrinkwrapFilename);\r\n  }\r\n\r\n  /**\r\n   * If the <project>/.rush/temp/shrinkwrap-deps.json file exists, delete it. Otherwise, do nothing.\r\n   */\r\n  public async deleteIfExistsAsync(): Promise<void> {\r\n    await FileSystem.deleteFileAsync(this.projectShrinkwrapFilePath, { throwIfNotExists: false });\r\n  }\r\n\r\n  /**\r\n   * Generate and write the project shrinkwrap file to <project>/.rush/temp/shrinkwrap-deps.json.\r\n   *\r\n   * @virtual\r\n   */\r\n  public abstract updateProjectShrinkwrapAsync(): Promise<void>;\r\n\r\n  /**\r\n   * The shrinkwrap file that the project shrinkwrap file is based off of.\r\n   */\r\n  protected get shrinkwrapFile(): BaseShrinkwrapFile {\r\n    return this._shrinkwrapFile;\r\n  }\r\n}\r\n"]}