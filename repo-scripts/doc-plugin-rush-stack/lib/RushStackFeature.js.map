{"version":3,"file":"RushStackFeature.js","sourceRoot":"","sources":["../src/RushStackFeature.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,gCAAiC;AACjC,oEAA0D;AAE1D,8DAImC;AAWnC,MAAa,gBAAiB,SAAQ,0CAAyB;IAA/D;;QACU,uBAAkB,GAAiB,IAAI,GAAG,EAAW,CAAC;IA2DhE,CAAC;IAzDQ,aAAa;QAClB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAEM,iBAAiB,CAAC,SAA0D;QACjF,wBAAwB;QACxB,MAAM,MAAM,GAAW;YACrB,KAAK;YACL,cAAc;YACd,4BAA4B;YAC5B,4BAA4B;YAC5B,KAAK;YACL,EAAE;SACH,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,SAAS,CAAC,WAAW,GAAG,MAAM,GAAG,SAAS,CAAC,WAAW,CAAC;QAEvD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAEM,UAAU,CAAC,SAAmD;QACnE,MAAM,cAAc,GAAoB;YACtC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,eAAe;oBACtB,GAAG,EAAE,aAAa;iBACnB;aACF;SACF,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAErE,MAAM,WAAW,GAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;QACvF,MAAM,cAAc,GAAW,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;QAEjF,8BAAU,CAAC,SAAS,CAAC,WAAW,EAAE,cAAc,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;IAClF,CAAC;IAEO,gBAAgB,CAAC,WAA8B,EAAE,aAAsB;QAC7E,KAAK,MAAM,OAAO,IAAI,aAAa,CAAC,OAAO,EAAE;YAC3C,IAAI,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gBACxC,MAAM,OAAO,GAAoB;oBAC/B,KAAK,EAAE,OAAO,CAAC,WAAW;oBAC1B,GAAG,EAAE,IAAI,CAAC,KAAK;yBACZ,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,iBAAiB,CAAC,OAAO,CAAE,CAAC;yBACxE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;iBACxB,CAAC;gBACF,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE1B,MAAM,eAAe,GAAsB,EAAE,CAAC;gBAC9C,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;gBAChD,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9B,OAAO,CAAC,QAAQ,GAAG,eAAe,CAAC;iBACpC;aACF;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;aAC7C;SACF;IACH,CAAC;CACF;AA5DD,4CA4DC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport yaml = require('js-yaml');\r\nimport { FileSystem } from '@rushstack/node-core-library';\r\nimport { ApiItem } from '@microsoft/api-extractor-model';\r\nimport {\r\n  MarkdownDocumenterFeature,\r\n  IMarkdownDocumenterFeatureOnBeforeWritePageArgs,\r\n  IMarkdownDocumenterFeatureOnFinishedArgs\r\n} from '@microsoft/api-documenter';\r\n\r\ninterface INavigationNode {\r\n  title: string;\r\n  url?: string;\r\n  subitems?: INavigationNode[];\r\n}\r\ninterface INavigationFile {\r\n  api_nav: INavigationNode[];\r\n}\r\n\r\nexport class RushStackFeature extends MarkdownDocumenterFeature {\r\n  private _apiItemsWithPages: Set<ApiItem> = new Set<ApiItem>();\r\n\r\n  public onInitialized(): void {\r\n    console.log('RushStackFeature: onInitialized()');\r\n  }\r\n\r\n  public onBeforeWritePage(eventArgs: IMarkdownDocumenterFeatureOnBeforeWritePageArgs): void {\r\n    // Add the Jekyll header\r\n    const header: string = [\r\n      '---',\r\n      'layout: page',\r\n      'navigation_source: api_nav',\r\n      'improve_this_button: false',\r\n      '---',\r\n      ''\r\n    ].join('\\n');\r\n    eventArgs.pageContent = header + eventArgs.pageContent;\r\n\r\n    this._apiItemsWithPages.add(eventArgs.apiItem);\r\n  }\r\n\r\n  public onFinished(eventArgs: IMarkdownDocumenterFeatureOnFinishedArgs): void {\r\n    const navigationFile: INavigationFile = {\r\n      api_nav: [\r\n        {\r\n          title: 'API Reference',\r\n          url: '/pages/api/'\r\n        }\r\n      ]\r\n    };\r\n    this._buildNavigation(navigationFile.api_nav, this.context.apiModel);\r\n\r\n    const navFilePath: string = path.join(this.context.outputFolder, '..', 'api_nav.yaml');\r\n    const navFileContent: string = yaml.safeDump(navigationFile, { lineWidth: 120 });\r\n\r\n    FileSystem.writeFile(navFilePath, navFileContent, { ensureFolderExists: true });\r\n  }\r\n\r\n  private _buildNavigation(parentNodes: INavigationNode[], parentApiItem: ApiItem): void {\r\n    for (const apiItem of parentApiItem.members) {\r\n      if (this._apiItemsWithPages.has(apiItem)) {\r\n        const newNode: INavigationNode = {\r\n          title: apiItem.displayName,\r\n          url: path.posix\r\n            .join('/pages/api/', this.context.documenter.getLinkForApiItem(apiItem)!)\r\n            .replace(/\\.md$/, '')\r\n        };\r\n        parentNodes.push(newNode);\r\n\r\n        const newNodeSubitems: INavigationNode[] = [];\r\n        this._buildNavigation(newNodeSubitems, apiItem);\r\n        if (newNodeSubitems.length > 0) {\r\n          newNode.subitems = newNodeSubitems;\r\n        }\r\n      } else {\r\n        this._buildNavigation(parentNodes, apiItem);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}